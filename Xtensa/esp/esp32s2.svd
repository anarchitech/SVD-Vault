<?xml version="1.0" ?>
<device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.1" xsi:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1.1.xsd">
  <vendor>ESPRESSIF SYSTEMS (SHANGHAI) CO., LTD.</vendor>
  <vendorID>ESPRESSIF</vendorID>
  <name>ESP32-S2</name>
  <series>ESP32-S2</series>
  <version>3</version>
  <description>32-bit MCU &amp; 2.4 GHz Wi-Fi</description>
  <licenseText>
    Copyright 2021 Espressif Systems (Shanghai) PTE LTD

    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
</licenseText>
  <cpu>
    <name>Xtensa LX7</name>
    <revision>r0p0</revision>
    <endian>little</endian>
    <mpuPresent>false</mpuPresent>
    <fpuPresent>false</fpuPresent>
    <nvicPrioBits>3</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>32</addressUnitBits>
  <width>32</width>
  <resetValue>0x00000000</resetValue>
  <resetMask>0xFFFFFFFF</resetMask>
  <peripherals>
    <peripheral>
      <name>AES</name>
      <description>AES (Advanced Encryption Standard) Accelerator</description>
      <groupName>AES</groupName>
      <baseAddress>0x6003a000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xbc</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>AES</name>
        <value>56</value>
      </interrupt>
      <registers>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>KEY_%s</name>
          <description>AES key register %s</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>KEY_0</name>
              <description>Stores AES keys.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>TEXT_IN_%s</name>
          <description>Source data register %s</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>TEXT_IN_0</name>
              <description>Stores the source data when the AES Accelerator operates in the Typical AES working mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>TEXT_OUT_%s</name>
          <description>Result data register %s</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>TEXT_OUT_0</name>
              <description>Stores the result data when the AES Accelerator operates in the Typical AES working mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MODE</name>
          <description>AES working mode configuration register</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>MODE</name>
              <description>Defines the operation type of the AES Accelerator operating under the Typical AES working mode.
&amp;
0x0(AES_EN_128): AES-EN-128 #
0x1(AES_EN_192): AES-EN-192 #
0x2(AES_EN_256): AES-EN-256 #
0x4(AES_DE_128): AES-DE-128 #
0x5(AES_DE_192): AES-DE-192 #
0x6(AES_DE_256): AES-DE-256 
&amp;</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENDIAN</name>
          <description>Endian configuration register</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>ENDIAN</name>
              <description>Defines the endianness of input and output texts.
&amp;
[1:0] key endian #
[3:2] text_in endian or in_stream endian #
[5:4] text_out endian or out_stream endian #
&amp;</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRIGGER</name>
          <description>Operation start controlling register</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>TRIGGER</name>
              <description>Set this bit to 1 to start AES operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATE</name>
          <description>Operation status register</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>STATE</name>
              <description>Stores the working status of the AES Accelerator. For details, see Table 3 for Typical AES working mode and Table 9 for DMA AES working mode.
For typical AES; 0 = idle; 1 = busy.
For DMA-AES; 0 = idle; 1 = busy; 2 = calculation_done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>IV_%s</name>
          <description>initialization vector</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IV_0</name>
              <description>This register stores the %sth 32-bit piece of 128-bit initialization vector</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>H_%s</name>
          <description>GCM hash subkey</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>H_0</name>
              <description>GCM hash subkey</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>J0_%s</name>
          <description>J0</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>J0_0</name>
              <description>This register stores the %sth 32-bit piece of 128-bit J0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>T0_%s</name>
          <description>T0</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>T0_0</name>
              <description>This register stores the %sth 32-bit piece of 128-bit T0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_ENABLE</name>
          <description>DMA enable register</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DMA_ENABLE</name>
              <description>Defines the working mode of the AES Accelerator. For details, see Table 1.
1'h0: typical AES operation
1'h1: DMA-AES operation</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BLOCK_MODE</name>
          <description>Block operation type register</description>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>BLOCK_MODE</name>
              <description>Defines the operation type of the AES Accelerator operating under the DMA-AES working mode. For details, see Table 8.
&amp;
3'h0(BLOCK_MODE_ECB): ECB #
3'h1(BLOCK_MODE_CBC): CBC #
3'h2(BLOCK_MODE_OFB): OFB #
3'h3(BLOCK_MODE_CTR): CTR #
3'h4(BLOCK_MODE_CFB8): CFB-8 #
3'h5(BLOCK_MODE_CFB128): CFB-128 #
3'h6(BLOCK_MODE_GCM): GCM
&amp;</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BLOCK_NUM</name>
          <description>Block number configuration register</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>BLOCK_NUM</name>
              <description>Stores the Block Number of plaintext or cipertext when the AES Accelerator operates under the DMA-AES working mode. For details, see Section 1.5.4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INC_SEL</name>
          <description>Standard incrementing function register</description>
          <addressOffset>0x9c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>INC_SEL</name>
              <description>Defines the Standard Incrementing Function for CTR block operation. Set this bit to 0 or 1 to choose INC 32 or INC 128 .</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AAD_BLOCK_NUM</name>
          <description>AAD block number configuration register</description>
          <addressOffset>0xa0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>AAD_BLOCK_NUM</name>
              <description>Stores the ADD Block Number for the GCM operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAINDER_BIT_NUM</name>
          <description>Remainder bit number of plaintext/ciphertext</description>
          <addressOffset>0xa4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>REMAINDER_BIT_NUM</name>
              <description>Stores the Remainder Bit Number for the GCM operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONTINUE_OP</name>
          <description>Operation continue controlling register</description>
          <addressOffset>0xa8</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>CONTINUE_OP</name>
              <description>Set this bit to 1 to continue AES operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>DMA-AES interrupt clear register</description>
          <addressOffset>0xac</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>INT_CLR</name>
              <description>Set this bit to 1 to clear AES interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>DMA-AES interrupt enable register</description>
          <addressOffset>0xb0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>INT_ENA</name>
              <description>Set this bit to 1 to enable AES interrupt and 0 to disable interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version control register</description>
          <addressOffset>0xb4</addressOffset>
          <size>32</size>
          <resetValue>0x20190514</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>Version control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_EXIT</name>
          <description>Operation exit controlling register</description>
          <addressOffset>0xb8</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DMA_EXIT</name>
              <description>Set this bit to 1 to exit AES operation. This register is only effective for DMA-AES operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APB_SARADC</name>
      <description>Successive Approximation Register Analog to Digital Converter</description>
      <groupName>APB_SARADC</groupName>
      <baseAddress>0x3f440000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x68</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>APB_ADC</name>
        <value>89</value>
      </interrupt>
      <registers>
        <register>
          <name>CTRL</name>
          <description>DIG ADC common configuration</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x407f8240</resetValue>
          <fields>
            <field>
              <name>START_FORCE</name>
              <description>0: select FSM to start SAR ADC. 1: select software to start SAR ADC.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>Start SAR ADC by software.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WORK_MODE</name>
              <description>0: single-channel scan mode. 1: double-channel scan mode. 2:
alternate-channel scan mode.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SEL</name>
              <description>0: select SAR ADC1. 1: select SAR ADC2, only work for single-channel scan mode.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_CLK_GATED</name>
              <description>SAR clock gate enable bit.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_CLK_DIV</name>
              <description>SAR clock divider</description>
              <bitOffset>7</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR1_PATT_LEN</name>
              <description>0 ~ 15 means length 1 ~ 16</description>
              <bitOffset>15</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_PATT_LEN</name>
              <description>0 ~ 15 means length 1 ~ 16</description>
              <bitOffset>19</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR1_PATT_P_CLEAR</name>
              <description>Clear the pointer of pattern table for DIG ADC1 CTRL.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_PATT_P_CLEAR</name>
              <description>Clear the pointer of pattern table for DIG ADC2 CTRL.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATA_SAR_SEL</name>
              <description>1: sar_sel will be coded to the MSB of the 16-bit output data, in this case the resolution should not be larger than 11 bits.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATA_TO_I2S</name>
              <description>1: I2S input data is from SAR ADC (for DMA), 0: I2S input data is from GPIO matrix</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD_SAR_FORCE</name>
              <description>Force option to xpd sar blocks.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAIT_ARB_CYCLE</name>
              <description>Wait arbit signal stable after sar_done.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL2</name>
          <description>DIG ADC common configuration</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0xa1fe</resetValue>
          <fields>
            <field>
              <name>MEAS_NUM_LIMIT</name>
              <description>Enable limit times of SAR ADC sample.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MAX_MEAS_NUM</name>
              <description>Set maximum conversion number.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR1_INV</name>
              <description>1: data to DIG ADC1 CTRL is inverted, otherwise not.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_INV</name>
              <description>1: data to DIG ADC2 CTRL is inverted, otherwise not.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_SEL</name>
              <description>1: select saradc timer 0: i2s_ws trigger</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_TARGET</name>
              <description>Set SAR ADC timer target.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_EN</name>
              <description>Enable SAR ADC timer trigger.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FSM</name>
          <description>digital adc control register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x2000000</resetValue>
          <fields>
            <field>
              <name>SAMPLE_NUM</name>
              <description>sample number</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMPLE_CYCLE</name>
              <description>sample cycles</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FSM_WAIT</name>
          <description>configure saradc fsm internal parameter base on test</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0xff0808</resetValue>
          <fields>
            <field>
              <name>XPD_WAIT</name>
              <description>xpd wait</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RSTB_WAIT</name>
              <description>reset time</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STANDBY_WAIT</name>
              <description>standby wait</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR1_STATUS</name>
          <description>digital adc1 status</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SAR1_STATUS</name>
              <description>digital adc1 status</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR2_STATUS</name>
          <description>digital adc2 status</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SAR2_STATUS</name>
              <description>digital adc2 status</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR1_PATT_TAB1</name>
          <description>item 0 ~ 3 for pattern table 1 (each item one byte)</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0xf0f0f0f</resetValue>
          <fields>
            <field>
              <name>SAR1_PATT_TAB1</name>
              <description>item 0 ~ 3 for pattern table 1 (each item one byte)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR1_PATT_TAB2</name>
          <description>Item 4 ~ 7 for pattern table 1 (each item one byte)</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <resetValue>0xf0f0f0f</resetValue>
          <fields>
            <field>
              <name>SAR1_PATT_TAB2</name>
              <description>Item 4 ~ 7 for pattern table 1 (each item one byte)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR1_PATT_TAB3</name>
          <description>Item 8 ~ 11 for pattern table 1 (each item one byte)</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0xf0f0f0f</resetValue>
          <fields>
            <field>
              <name>SAR1_PATT_TAB3</name>
              <description>Item 8 ~ 11 for pattern table 1 (each item one byte)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR1_PATT_TAB4</name>
          <description>Item 12 ~ 15 for pattern table 1 (each item one byte)</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0xf0f0f0f</resetValue>
          <fields>
            <field>
              <name>SAR1_PATT_TAB4</name>
              <description>Item 12 ~ 15 for pattern table 1 (each item one byte)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR2_PATT_TAB1</name>
          <description>item 0 ~ 3 for pattern table 2 (each item one byte)</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0xf0f0f0f</resetValue>
          <fields>
            <field>
              <name>SAR2_PATT_TAB1</name>
              <description>item 0 ~ 3 for pattern table 2 (each item one byte)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR2_PATT_TAB2</name>
          <description>Item 4 ~ 7 for pattern table 2 (each item one byte)</description>
          <addressOffset>0x2c</addressOffset>
          <size>32</size>
          <resetValue>0xf0f0f0f</resetValue>
          <fields>
            <field>
              <name>SAR2_PATT_TAB2</name>
              <description>Item 4 ~ 7 for pattern table 2 (each item one byte)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR2_PATT_TAB3</name>
          <description>Item 8 ~ 11 for pattern table 2 (each item one byte)</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <resetValue>0xf0f0f0f</resetValue>
          <fields>
            <field>
              <name>SAR2_PATT_TAB3</name>
              <description>Item 8 ~ 11 for pattern table 2 (each item one byte)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR2_PATT_TAB4</name>
          <description>Item 12 ~ 15 for pattern table 2 (each item one byte)</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <resetValue>0xf0f0f0f</resetValue>
          <fields>
            <field>
              <name>SAR2_PATT_TAB4</name>
              <description>Item 12 ~ 15 for pattern table 2 (each item one byte)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ARB_CTRL</name>
          <description>Configure the settings of DIG ADC2 arbiter</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <resetValue>0x900</resetValue>
          <fields>
            <field>
              <name>ADC_ARB_APB_FORCE</name>
              <description>ADC2 arbiter forces to enable DIG ADC2 CTRL.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_RTC_FORCE</name>
              <description>ADC2 arbiter forces to enable RTC ADC2 CTRL.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_WIFI_FORCE</name>
              <description>ADC2 arbiter forces to enable PWDET/PKDET CTRL.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_GRANT_FORCE</name>
              <description>ADC2 arbiter force grant.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_APB_PRIORITY</name>
              <description>Set DIG ADC2 CTRL priority.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_RTC_PRIORITY</name>
              <description>Set RTC ADC2 CTRL priority.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_WIFI_PRIORITY</name>
              <description>Set PWDET/PKDET CTRL priority.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_FIX_PRIORITY</name>
              <description>ADC2 arbiter uses fixed priority.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FILTER_CTRL</name>
          <description>Configure the settings of DIG ADC2 filter</description>
          <addressOffset>0x3c</addressOffset>
          <size>32</size>
          <resetValue>0x20400000</resetValue>
          <fields>
            <field>
              <name>ADC2_FILTER_RESET</name>
              <description>Reset ADC2 filter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC1_FILTER_RESET</name>
              <description>Reset ADC1 filter.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC2_FILTER_FACTOR</name>
              <description>Set filter factor for DIG ADC2 CRTL.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC1_FILTER_FACTOR</name>
              <description>Set filter factor for DIG ADC1 CRTL.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC2_FILTER_EN</name>
              <description>Enable DIG ADC2 CRTL filter.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC1_FILTER_EN</name>
              <description>Enable DIG ADC1 CRTL filter.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FILTER_STATUS</name>
          <description>Data status of DIG ADC2 filter</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>ADC2_FILTER_DATA</name>
              <description>ADC2 filter data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADC1_FILTER_DATA</name>
              <description>ADC1 filter data.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THRES_CTRL</name>
          <description>Configure monitor threshold for DIG ADC2</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>Clock gate enable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC2_THRES_MODE</name>
              <description>1: ADC_DATA &gt; = threshold, generate interrupt. 0: ADC_DATA &lt; threshold, generate interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC1_THRES_MODE</name>
              <description>1: ADC_DATA &gt; = threshold, generate interrupt. 0: ADC_DATA &lt; threshold, generate interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC2_THRES</name>
              <description>ADC2 threshold.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC1_THRES</name>
              <description>ADC1 threshold.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC2_THRES_EN</name>
              <description>Enable ADC2 threshold monitor.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC1_THRES_EN</name>
              <description>Enable ADC1 threshold monitor.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>Enable DIG ADC interrupts</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>ADC2_THRES_INT_ENA</name>
              <description>Enable bit of APB_SARADC_ADC2_THRES_INT interrupt.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC1_THRES_INT_ENA</name>
              <description>Enable bit of APB_SARADC_ADC1_THRES_INT interrupt.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC2_DONE_INT_ENA</name>
              <description>Enable bit of APB_SARADC_ADC2_DONE_INT interrupt.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC1_DONE_INT_ENA</name>
              <description>Enable bit of APB_SARADC_ADC1_DONE_INT interrupt.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>DIG ADC interrupt raw bits</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>ADC2_THRES_INT_RAW</name>
              <description>Raw bit of APB_SARADC_ADC2_THRES_INT interrupt.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADC1_THRES_INT_RAW</name>
              <description>Raw bit of APB_SARADC_ADC1_THRES_INT interrupt.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADC2_DONE_INT_RAW</name>
              <description>Raw bit of APB_SARADC_ADC2_DONE_INT interrupt.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADC1_DONE_INT_RAW</name>
              <description>Raw bit of APB_SARADC_ADC1_DONE_INT interrupt.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>DIG ADC interrupt status</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>ADC2_THRES_INT_ST</name>
              <description>Status of APB_SARADC_ADC2_THRES_INT interrupt.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADC1_THRES_INT_ST</name>
              <description>Status of APB_SARADC_ADC1_THRES_INT interrupt.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADC2_DONE_INT_ST</name>
              <description>Status of APB_SARADC_ADC2_DONE_INT interrupt.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADC1_DONE_INT_ST</name>
              <description>Status of APB_SARADC_ADC1_DONE_INT interrupt.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>Clear DIG ADC interrupts</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>ADC2_THRES_INT_CLR</name>
              <description>Clear bit of APB_SARADC_ADC2_THRES_INT interrupt.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ADC1_THRES_INT_CLR</name>
              <description>Clear bit of APB_SARADC_ADC1_THRES_INT interrupt.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ADC2_DONE_INT_CLR</name>
              <description>Clear bit of APB_SARADC_ADC2_DONE_INT interrupt.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ADC1_DONE_INT_CLR</name>
              <description>Clear bit of APB_SARADC_ADC1_DONE_INT interrupt.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CONF</name>
          <description>Configure digital ADC DMA path</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <resetValue>0xff</resetValue>
          <fields>
            <field>
              <name>APB_ADC_EOF_NUM</name>
              <description>Generate dma_in_suc_eof when sample cnt = spi_eof_num.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_ADC_RESET_FSM</name>
              <description>Reset DIG ADC CTRL status.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_ADC_TRANS</name>
              <description>Set this bit, DIG ADC CTRL uses SPI DMA.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLKM_CONF</name>
          <description>Configure DIG ADC clock</description>
          <addressOffset>0x5c</addressOffset>
          <size>32</size>
          <resetValue>0x4</resetValue>
          <fields>
            <field>
              <name>CLKM_DIV_NUM</name>
              <description>Integral DIG_ADC clock divider value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKM_DIV_B</name>
              <description>Fractional clock divider numerator value</description>
              <bitOffset>8</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKM_DIV_A</name>
              <description>Fractional clock divider denominator value</description>
              <bitOffset>14</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_SEL</name>
              <description>1: select APLL. 2: select APB_CLK. Other values: disable clock.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_DAC_CTRL</name>
          <description>Configure DAC settings</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <resetValue>0x2064</resetValue>
          <fields>
            <field>
              <name>DAC_TIMER_TARGET</name>
              <description>Set DAC timer target.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_TIMER_EN</name>
              <description>Enable read dac data.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_DAC_ALTER_MODE</name>
              <description>Enable DAC alter mode.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_DAC_TRANS</name>
              <description>Enable DMA_DAC.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_RESET_FIFO</name>
              <description>Reset DIG DAC FIFO.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_DAC_RST</name>
              <description>Reset DIG DAC by software.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_CTRL_DATE</name>
          <description>Version control register</description>
          <addressOffset>0x3fc</addressOffset>
          <size>32</size>
          <resetValue>0x1907162</resetValue>
          <fields>
            <field>
              <name>APB_CTRL_DATE</name>
              <description>Version control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DEDICATED_GPIO</name>
      <description>Dedicated GPIO</description>
      <groupName>DEDIC_GPIO</groupName>
      <baseAddress>0x3f4cf000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x30</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>OUT_DRT</name>
          <description>Dedicated GPIO Directive Output register</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>VLAUE</name>
              <description>This register is used to configure directive output value of 8-channel dedicated gpio.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_MSK</name>
          <description>Dedicated GPIO Mask Output register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OUT_VALUE</name>
              <description>This register is used to configure masked output value of 8-channel dedicated gpio.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_MSK</name>
              <description>This register is used to configure channels which would be masked. 1: corresponding channel's output would be masked.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_IDV</name>
          <description>Dedicated GPIO Individual Output register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>CH0</name>
              <description>Configure channel 0 output value. 0: hold output value; 1: set output value; 2: clear output value; 3: inverse output value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH1</name>
              <description>Configure channel 1 output value. 0: hold output value; 1: set output value; 2: clear output value; 3: inverse output value.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH2</name>
              <description>Configure channel 2 output value. 0: hold output value; 1: set output value; 2: clear output value; 3: inverse output value.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH3</name>
              <description>Configure channel 3 output value. 0: hold output value; 1: set output value; 2: clear output value; 3: inverse output value.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH4</name>
              <description>Configure channel 4 output value. 0: hold output value; 1: set output value; 2: clear output value; 3: inverse output value.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH5</name>
              <description>Configure channel 5 output value. 0: hold output value; 1: set output value; 2: clear output value; 3: inverse output value.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH6</name>
              <description>Configure channel 6 output value. 0: hold output value; 1: set output value; 2: clear output value; 3: inverse output value.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH7</name>
              <description>Configure channel 7 output value. 0: hold output value; 1: set output value; 2: clear output value; 3: inverse output value.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_SCAN</name>
          <description>Dedicated GPIO Output Status register</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OUT_STATUS</name>
              <description>gpio out value configured by DEDIC_GPIO_OUT_DRT_REG, DEDIC_GPIO_OUT_MSK_REG, DEDIC_GPIO_OUT_IDV_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_CPU</name>
          <description>Dedicated GPIO Output Mode Select register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SEL0</name>
              <description>Select gpio out value configured by registers or CPU instructors for channel 0. 1: select CPU instructors.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL1</name>
              <description>Select gpio out value configured by registers or CPU instructors for channel 1. 1: select CPU instructors.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL2</name>
              <description>Select gpio out value configured by registers or CPU instructors for channel 2. 1: select CPU instructors.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL3</name>
              <description>Select gpio out value configured by registers or CPU instructors for channel 3. 1: select CPU instructors.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL4</name>
              <description>Select gpio out value configured by registers or CPU instructors for channel 4. 1: select CPU instructors.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL5</name>
              <description>Select gpio out value configured by registers or CPU instructors for channel 5. 1: select CPU instructors.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL6</name>
              <description>Select gpio out value configured by registers or CPU instructors for channel 6. 1: select CPU instructors.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL7</name>
              <description>Select gpio out value configured by registers or CPU instructors for channel 7. 1: select CPU instructors.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_DLY</name>
          <description>Dedicated GPIO Input Delay Configuration register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>CH0</name>
              <description>Configure gpio 0 input delay. 0: No delay; 1: one clock delay; 2: two clock delay; 3: three clock delay.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH1</name>
              <description>Configure gpio 1 input delay. 0: No delay; 1: one clock delay; 2: two clock delay; 3: three clock delay.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH2</name>
              <description>Configure gpio 2 input delay. 0: No delay; 1: one clock delay; 2: two clock delay; 3: three clock delay.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH3</name>
              <description>Configure gpio 3 input delay. 0: No delay; 1: one clock delay; 2: two clock delay; 3: three clock delay.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH4</name>
              <description>Configure gpio 4 input delay. 0: No delay; 1: one clock delay; 2: two clock delay; 3: three clock delay.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH5</name>
              <description>Configure gpio 5 input delay. 0: No delay; 1: one clock delay; 2: two clock delay; 3: three clock delay.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH6</name>
              <description>Configure gpio 6 input delay. 0: No delay; 1: one clock delay; 2: two clock delay; 3: three clock delay.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH7</name>
              <description>Configure gpio 7 input delay. 0: No delay; 1: one clock delay; 2: two clock delay; 3: three clock delay.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_SCAN</name>
          <description>Dedicated GPIO Input Status register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IN_STATUS</name>
              <description>gpio in value after configured by DEDIC_GPIO_IN_DLY_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTR_RCGN</name>
          <description>Dedicated GPIO Interrupts Generate Mode register</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>INTR_MODE_CH0</name>
              <description>Configure channel 0 interrupt generate mode. 
0/1: do not generate interrupt; 
2: low level trigger; 
3: high level trigger; 
4: falling edge trigger; 
5: raising edge trigger; 
6/7: falling and raising edge trigger.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTR_MODE_CH1</name>
              <description>Configure channel 1 interrupt generate mode. 
0/1: do not generate interrupt; 
2: low level trigger; 
3: high level trigger; 
4: falling edge trigger; 
5: raising edge trigger; 
6/7: falling and raising edge trigger.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTR_MODE_CH2</name>
              <description>Configure channel 2 interrupt generate mode. 
0/1: do not generate interrupt; 
2: low level trigger; 
3: high level trigger; 
4: falling edge trigger; 
5: raising edge trigger; 
6/7: falling and raising edge trigger.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTR_MODE_CH3</name>
              <description>Configure channel 3 interrupt generate mode. 
0/1: do not generate interrupt; 
2: low level trigger; 
3: high level trigger; 
4: falling edge trigger; 
5: raising edge trigger; 
6/7: falling and raising edge trigger.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTR_MODE_CH4</name>
              <description>Configure channel 4 interrupt generate mode. 
0/1: do not generate interrupt; 
2: low level trigger; 
3: high level trigger; 
4: falling edge trigger; 
5: raising edge trigger; 
6/7: falling and raising edge trigger.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTR_MODE_CH5</name>
              <description>Configure channel 5 interrupt generate mode. 
0/1: do not generate interrupt; 
2: low level trigger; 
3: high level trigger; 
4: falling edge trigger; 
5: raising edge trigger; 
6/7: falling and raising edge trigger.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTR_MODE_CH6</name>
              <description>Configure channel 6 interrupt generate mode. 
0/1: do not generate interrupt; 
2: low level trigger; 
3: high level trigger; 
4: falling edge trigger; 
5: raising edge trigger; 
6/7: falling and raising edge trigger.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTR_MODE_CH7</name>
              <description>Configure channel 7 interrupt generate mode. 
0/1: do not generate interrupt; 
2: low level trigger; 
3: high level trigger; 
4: falling edge trigger; 
5: raising edge trigger; 
6/7: falling and raising edge trigger.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTR_RAW</name>
          <description>Raw interrupt status</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>GPIO0</name>
              <description>This interrupt raw bit turns to high level when dedicated GPIO 0 has level/edge change configured by DEDIC_GPIO_INTR_RCGN_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO1</name>
              <description>This interrupt raw bit turns to high level when dedicated GPIO 1 has level/edge change configured by DEDIC_GPIO_INTR_RCGN_REG.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO2</name>
              <description>This interrupt raw bit turns to high level when dedicated GPIO 2 has level/edge change configured by DEDIC_GPIO_INTR_RCGN_REG.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO3</name>
              <description>This interrupt raw bit turns to high level when dedicated GPIO 3 has level/edge change configured by DEDIC_GPIO_INTR_RCGN_REG.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO4</name>
              <description>This interrupt raw bit turns to high level when dedicated GPIO 4 has level/edge change configured by DEDIC_GPIO_INTR_RCGN_REG.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO5</name>
              <description>This interrupt raw bit turns to high level when dedicated GPIO 5 has level/edge change configured by DEDIC_GPIO_INTR_RCGN_REG.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO6</name>
              <description>This interrupt raw bit turns to high level when dedicated GPIO 6 has level/edge change configured by DEDIC_GPIO_INTR_RCGN_REG.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO7</name>
              <description>This interrupt raw bit turns to high level when dedicated GPIO 7 has level/edge change configured by DEDIC_GPIO_INTR_RCGN_REG.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTR_RLS</name>
          <description>Interrupt enable bits</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>GPIO0_INT_ENA</name>
              <description>This enable bit for reg_gpio0_int_st register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO1_INT_ENA</name>
              <description>This enable bit for reg_gpio1_int_st register.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO2_INT_ENA</name>
              <description>This enable bit for reg_gpio2_int_st register.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO3_INT_ENA</name>
              <description>This enable bit for reg_gpio3_int_st register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO4_INT_ENA</name>
              <description>This enable bit for reg_gpio4_int_st register.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO5_INT_ENA</name>
              <description>This enable bit for reg_gpio5_int_st register.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO6_INT_ENA</name>
              <description>This enable bit for reg_gpio6_int_st register.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO7_INT_ENA</name>
              <description>This enable bit for reg_gpio7_int_st register.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTR_ST</name>
          <description>Masked interrupt status</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>GPIO0_INT_ST</name>
              <description>This is the status bit for reg_gpio0_int_raw when reg_gpio0_int_ena is set to 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO1_INT_ST</name>
              <description>This is the status bit for reg_gpio1_int_raw when reg_gpio1_int_ena is set to 1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO2_INT_ST</name>
              <description>This is the status bit for reg_gpio2_int_raw when reg_gpio2_int_ena is set to 1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO3_INT_ST</name>
              <description>This is the status bit for reg_gpio3_int_raw when reg_gpio3_int_ena is set to 1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO4_INT_ST</name>
              <description>This is the status bit for reg_gpio4_int_raw when reg_gpio4_int_ena is set to 1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO5_INT_ST</name>
              <description>This is the status bit for reg_gpio5_int_raw when reg_gpio5_int_ena is set to 1.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO6_INT_ST</name>
              <description>This is the status bit for reg_gpio6_int_raw when reg_gpio6_int_ena is set to 1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO7_INT_ST</name>
              <description>This is the status bit for reg_gpio7_int_raw when reg_gpio7_int_ena is set to 1.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTR_CLR</name>
          <description>Interrupt clear bits</description>
          <addressOffset>0x2c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>GPIO0_INT_CLR</name>
              <description>Set this bit to clear the reg_gpio0_int_raw interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>GPIO1_INT_CLR</name>
              <description>Set this bit to clear the reg_gpio1_int_raw interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>GPIO2_INT_CLR</name>
              <description>Set this bit to clear the reg_gpio2_int_raw interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>GPIO3_INT_CLR</name>
              <description>Set this bit to clear the reg_gpio3_int_raw interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>GPIO4_INT_CLR</name>
              <description>Set this bit to clear the reg_gpio4_int_raw interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>GPIO5_INT_CLR</name>
              <description>Set this bit to clear the reg_gpio5_int_raw interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>GPIO6_INT_CLR</name>
              <description>Set this bit to clear the reg_gpio6_int_raw interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>GPIO7_INT_CLR</name>
              <description>Set this bit to clear the reg_gpio7_int_raw interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DS</name>
      <description>Digital Signature</description>
      <groupName>DS</groupName>
      <baseAddress>0x6003d000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xa5c</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <dim>1584</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>C_MEM[%s]</name>
          <description>memory C</description>
          <addressOffset>0x0</addressOffset>
          <size>8</size>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>IV_%s</name>
          <description>IV block data</description>
          <addressOffset>0x630</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IV_0</name>
              <description>IV block data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>512</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>X_MEM[%s]</name>
          <description>memory X</description>
          <addressOffset>0x800</addressOffset>
          <size>8</size>
        </register>
        <register>
          <dim>512</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>Z_MEM[%s]</name>
          <description>memory Z</description>
          <addressOffset>0xa00</addressOffset>
          <size>8</size>
        </register>
        <register>
          <name>SET_START</name>
          <description>Activates the DS peripheral</description>
          <addressOffset>0xe00</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SET_START</name>
              <description>Write 1 to this register to activate the DS peripheral.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_ME</name>
          <description>Starts DS operation</description>
          <addressOffset>0xe04</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SET_ME</name>
              <description>Write 1 to this register to start DS operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_FINISH</name>
          <description>Ends DS operation</description>
          <addressOffset>0xe08</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SET_FINISH</name>
              <description>Write 1 to this register to end DS operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_BUSY</name>
          <description>Status of the DS</description>
          <addressOffset>0xe0c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>QUERY_BUSY</name>
              <description>1: The DS peripheral is busy;0: The DS peripheral is idle.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_KEY_WRONG</name>
          <description>Checks the reason why DS_KEY is not ready.</description>
          <addressOffset>0xe10</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>QUERY_KEY_WRONG</name>
              <description>1-15: HMAC was activated, but the DS peripheral did not successfully receive the DS_KEY value from the HMAC peripheral. The biggest value is 15. 0: HMAC is not activated.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_CHECK</name>
          <description>Queries DS check result</description>
          <addressOffset>0xe14</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>MD_ERROR</name>
              <description>1: MD check fails;0: MD check passes.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PADDING_BAD</name>
              <description>1: The padding check fails;0: The padding check passes.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>version register</description>
          <addressOffset>0xe20</addressOffset>
          <size>32</size>
          <resetValue>0x20190418</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>Version control register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>EFUSE</name>
      <description>eFuse Controller</description>
      <groupName>EFUSE</groupName>
      <baseAddress>0x3f41a000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1d0</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>EFUSE</name>
        <value>46</value>
      </interrupt>
      <registers>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>PGM_DATA%s</name>
          <description>Register %s that stores data to be programmed.</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PGM_DATA_0</name>
              <description>The content of the %sth 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>3</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>PGM_CHECK_VALUE%s</name>
          <description>Register %s that stores the RS code to be programmed.</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PGM_RS_DATA_0</name>
              <description>The content of the %sth 32-bit RS code to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_WR_DIS</name>
          <description>Register 0 of BLOCK0.</description>
          <addressOffset>0x2c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>WR_DIS</name>
              <description>Disables programming of individual eFuses.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA0</name>
          <description>Register 1 of BLOCK0.</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RD_DIS</name>
              <description>Disables software reading from individual eFuse blocks (BLOCK4-10).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_RTC_RAM_BOOT</name>
              <description>Set this bit to disable boot from RTC RAM.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_ICACHE</name>
              <description>Set this bit to disable Icache.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DCACHE</name>
              <description>Set this bit to disable Dcache.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_ICACHE</name>
              <description>Disables Icache when SoC is in Download mode.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_DCACHE</name>
              <description>Disables Dcache when SoC is in Download mode.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_FORCE_DOWNLOAD</name>
              <description>Set this bit to disable the function that forces chip into download mode.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB</name>
              <description>Set this bit to disable USB OTG function.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_CAN</name>
              <description>Set this bit to disable TWAI controller function.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_BOOT_REMAP</name>
              <description>Disables capability to Remap RAM to ROM address space.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED5</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SOFT_DIS_JTAG</name>
              <description>Software disables JTAG. When software disabled, JTAG can be activated temporarily by HMAC peripheral.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HARD_DIS_JTAG</name>
              <description>Hardware disables JTAG permanently.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_MANUAL_ENCRYPT</name>
              <description>Disables flash encryption when in download boot modes.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_DREFH</name>
              <description>Controls single-end input threshold vrefh, 1.76 V to 2 V with step of 80 mV, stored in eFuse.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_DREFL</name>
              <description>Controls single-end input threshold vrefl, 0.8 V to 1.04 V with step of 80 mV, stored in eFuse.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_EXCHG_PINS</name>
              <description>Set this bit to exchange USB D+ and D- pins.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EXT_PHY_ENABLE</name>
              <description>Set this bit to enable external USB PHY.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_FORCE_NOPERSIST</name>
              <description>If set, forces USB BVALID to 1.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED0</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_MODECURLIM</name>
              <description>SPI regulator switches current limit mode.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DREFH</name>
              <description>SPI regulator high voltage reference.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA1</name>
          <description>Register 2 of BLOCK0.</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>VDD_SPI_DREFM</name>
              <description>SPI regulator medium voltage reference.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DREFL</name>
              <description>SPI regulator low voltage reference.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_XPD</name>
              <description>If VDD_SPI_FORCE is 1, this value determines if the VDD_SPI regulator is powered on.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_TIEH</name>
              <description>If VDD_SPI_FORCE is 1, determines VDD_SPI voltage. 0: VDD_SPI connects to 1.8 V LDO; 1: VDD_SPI connects to VDD_RTC_IO.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_FORCE</name>
              <description>Set this bit to use XPD_VDD_PSI_REG and VDD_SPI_TIEH to configure VDD_SPI LDO.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_EN_INIT</name>
              <description>Set SPI regulator to 0 to configure init[1:0]=0.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_ENCURLIM</name>
              <description>Set SPI regulator to 1 to enable output current limit.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DCURLIM</name>
              <description>Tunes the current limit threshold of SPI regulator when tieh=0, about 800 mA/(8+d).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_INIT</name>
              <description>Adds resistor from LDO output to ground. 0: no resistance; 1: 6 K; 2: 4 K; 3: 2 K.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DCAP</name>
              <description>Prevents SPI regulator from overshoot.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WDT_DELAY_SEL</name>
              <description>Selects RTC watchdog timeout threshold at startup. 0: 40,000 slow clock cycles; 1: 80,000 slow clock cycles; 2: 160,000 slow clock cycles; 3: 320,000 slow clock cycles.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SPI_BOOT_CRYPT_CNT</name>
              <description>Enables encryption and decryption, when an SPI boot mode is set. Feature is enabled 1 or 3 bits are set in the eFuse, disabled otherwise.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE0</name>
              <description>If set, revokes use of secure boot key digest 0.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE1</name>
              <description>If set, revokes use of secure boot key digest 1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE2</name>
              <description>If set, revokes use of secure boot key digest 2.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_0</name>
              <description>Purpose of KEY0. Refer to Table Key Purpose Values.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_1</name>
              <description>Purpose of KEY1. Refer to Table Key Purpose Values.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA2</name>
          <description>Register 3 of BLOCK0.</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>KEY_PURPOSE_2</name>
              <description>Purpose of KEY2. Refer to Table Key Purpose Values.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_3</name>
              <description>Purpose of KEY3. Refer to Table Key Purpose Values.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_4</name>
              <description>Purpose of KEY4. Refer to Table Key Purpose Values.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_5</name>
              <description>Purpose of KEY5. Refer to Table Key Purpose Values.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_6</name>
              <description>Purpose of KEY6. Refer to Table Key Purpose Values.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_EN</name>
              <description>Set this bit to enable secure boot.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_AGGRESSIVE_REVOKE</name>
              <description>Set this bit to enable aggressive secure boot key revocation mode.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED1</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>22</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_TPUW</name>
              <description>Configures flash startup delay after SoC power-up, in unit of (ms/2). When the value is 15, delay is 7.5 ms.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA3</name>
          <description>Register 4 of BLOCK0.</description>
          <addressOffset>0x3c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DIS_DOWNLOAD_MODE</name>
              <description>Set this bit to disable all download boot modes.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_LEGACY_SPI_BOOT</name>
              <description>Set this bit to disable Legacy SPI boot mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UART_PRINT_CHANNEL</name>
              <description>Selects the default UART for printing boot messages. 0: UART0; 1: UART1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED3</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_DOWNLOAD_MODE</name>
              <description>Set this bit to disable use of USB in UART download boot mode.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ENABLE_SECURITY_DOWNLOAD</name>
              <description>Set this bit to enable secure UART download mode (read/write flash only).</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UART_PRINT_CONTROL</name>
              <description>Set the default UART boot message output mode.
&amp;
00: Enabled.#
01: Enable when GPIO46 is low at reset.#
10: Enable when GPIO46 is high at reset.#
11: Disabled.
&amp;</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PIN_POWER_SELECTION</name>
              <description>Set default power supply for GPIO33-GPIO37, set when SPI flash is initialized. 0: VDD3P3_CPU; 1: VDD_SPI.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_TYPE</name>
              <description>SPI flash type. 0: maximum four data lines, 1: eight data lines.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FORCE_SEND_RESUME</name>
              <description>If set, forces ROM code to send an SPI flash resume command during SPI boot.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_VERSION</name>
              <description>Secure version (used by ESP-IDF anti-rollback feature).</description>
              <bitOffset>11</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED2</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA4</name>
          <description>Register 5 of BLOCK0.</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RPT4_RESERVED4</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_0</name>
          <description>Register 0 of BLOCK1.</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>MAC_0</name>
              <description>Stores the low 32 bits of MAC address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_1</name>
          <description>Register 1 of BLOCK1.</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>MAC_1</name>
              <description>Stores the high 16 bits of MAC address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SPI_PAD_CONF_0</name>
              <description>Stores the zeroth part of SPI_PAD_CONF.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_2</name>
          <description>Register 2 of BLOCK1.</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SPI_PAD_CONF_1</name>
              <description>Stores the first part of SPI_PAD_CONF.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_3</name>
          <description>Register 3 of BLOCK1.</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SPI_PAD_CONF_2</name>
              <description>Stores the second part of SPI_PAD_CONF.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_DATA_PART0_0</name>
              <description>Stores the zeroth part  of the zeroth part of system data.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_4</name>
          <description>Register 4 of BLOCK1.</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SYS_DATA_PART0_1</name>
              <description>Stores the fist part of the zeroth part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_5</name>
          <description>Register 5 of BLOCK1.</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SYS_DATA_PART0_2</name>
              <description>Stores the second part of the zeroth part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>RD_SYS_DATA_PART1_%s</name>
          <description>Register %s of BLOCK2 (system).</description>
          <addressOffset>0x5c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_0</name>
              <description>Stores the %sth 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>RD_USR_DATA%s</name>
          <description>Register %s of BLOCK3 (user).</description>
          <addressOffset>0x7c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>USR_DATA0</name>
              <description>Stores the %sth 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>RD_KEY0_DATA%s</name>
          <description>Register %s of BLOCK4 (KEY0).</description>
          <addressOffset>0x9c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>KEY0_DATA0</name>
              <description>Stores the %sth 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>RD_KEY1_DATA%s</name>
          <description>Register %s of BLOCK5 (KEY1).</description>
          <addressOffset>0xbc</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>KEY1_DATA0</name>
              <description>Stores the %sth 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>RD_KEY2_DATA%s</name>
          <description>Register %s of BLOCK6 (KEY2).</description>
          <addressOffset>0xdc</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>KEY2_DATA0</name>
              <description>Stores the %sth 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>RD_KEY3_DATA%s</name>
          <description>Register %s of BLOCK7 (KEY3).</description>
          <addressOffset>0xfc</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>KEY3_DATA0</name>
              <description>Stores the %sth 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>RD_KEY4_DATA%s</name>
          <description>Register %s of BLOCK8 (KEY4).</description>
          <addressOffset>0x11c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>KEY4_DATA0</name>
              <description>Stores the %sth 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>RD_KEY5_DATA%s</name>
          <description>Register %s of BLOCK9 (KEY5).</description>
          <addressOffset>0x13c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>KEY5_DATA0</name>
              <description>Stores the %sth 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>RD_SYS_DATA_PART2_%s</name>
          <description>Register %s of BLOCK10 (system).</description>
          <addressOffset>0x15c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_0</name>
              <description>Stores the %sth 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR0</name>
          <description>Programming error record register 0 of BLOCK0.</description>
          <addressOffset>0x17c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RD_DIS_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_RD_DIS.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_RTC_RAM_BOOT_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_DIS_RTC_RAM_BOOT.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_ICACHE_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_DIS_ICACHE.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DCACHE_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_DIS_DCACHE.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_ICACHE_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_DIS_DOWNLOAD_ICACHE.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_DCACHE_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_DIS_DOWNLOAD_DCACHE.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_FORCE_DOWNLOAD_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_DIS_FORCE_DOWNLOAD.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_DIS_USB.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_CAN_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_DIS_CAN.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_BOOT_REMAP_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_DIS_BOOT_REMAP.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED5_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_RPT4_RESERVED5.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SOFT_DIS_JTAG_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_SOFT_DIS_JTAG.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HARD_DIS_JTAG_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_HARD_DIS_JTAG.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_MANUAL_ENCRYPT_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_DIS_DOWNLOAD_MANUAL_ENCRYPT.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_DREFH_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_USB_DREFH.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_DREFL_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_USB_DREFL.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_EXCHG_PINS_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_USB_EXCHG_PINS.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EXT_PHY_ENABLE_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_EXT_PHY_ENABLE.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_FORCE_NOPERSIST_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_USB_FORCE_NOPERSIST.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED0_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_RPT4_RESERVED0.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_MODECURLIM_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_VDD_SPI_MODECURLIM.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DREFH_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_VDD_SPI_DREFH.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR1</name>
          <description>Programming error record register 1 of BLOCK0.</description>
          <addressOffset>0x180</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>VDD_SPI_DREFM_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_VDD_SPI_DREFM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DREFL_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_VDD_SPI_DREFL.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_XPD_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_VDD_SPI_XPD.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_TIEH_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_VDD_SPI_TIEH.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_FORCE_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_VDD_SPI_FORCE.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_EN_INIT_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_VDD_SPI_EN_INIT.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_ENCURLIM_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_VDD_SPI_ENCURLIM.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DCURLIM_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_VDD_SPI_DCURLIM.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_INIT_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_VDD_SPI_INIT.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DCAP_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_VDD_SPI_DCAP.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WDT_DELAY_SEL_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_WDT_DELAY_SEL.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SPI_BOOT_CRYPT_CNT_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_SPI_BOOT_CRYPT_CNT.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE0_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_SECURE_BOOT_KEY_REVOKE0.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE1_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_SECURE_BOOT_KEY_REVOKE1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE2_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_SECURE_BOOT_KEY_REVOKE2.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_0_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_KEY_PURPOSE_0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_1_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_KEY_PURPOSE_1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR2</name>
          <description>Programming error record register 2 of BLOCK0.</description>
          <addressOffset>0x184</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>KEY_PURPOSE_2_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_KEY_PURPOSE_2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_3_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_KEY_PURPOSE_3.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_4_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_KEY_PURPOSE_4.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_5_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_KEY_PURPOSE_5.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_6_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_KEY_PURPOSE_6.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_EN_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_SECURE_BOOT_EN.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_AGGRESSIVE_REVOKE_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_SECURE_BOOT_AGGRESSIVE_REVOKE.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED1_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_RPT4_RESERVED1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_TPUW_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_FLASH_TPUW.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR3</name>
          <description>Programming error record register 3 of BLOCK0.</description>
          <addressOffset>0x188</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DIS_DOWNLOAD_MODE_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_DIS_DOWNLOAD_MODE.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_LEGACY_SPI_BOOT_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_DIS_LEGACY_SPI_BOOT.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UART_PRINT_CHANNEL_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_UART_PRINT_CHANNEL.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED3_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_RPT4_RESERVED3.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_DOWNLOAD_MODE_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_DIS_USB_DOWNLOAD_MODE.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ENABLE_SECURITY_DOWNLOAD_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_ENABLE_SECURITY_DOWNLOAD.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UART_PRINT_CONTROL_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_UART_PRINT_CONTROL.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PIN_POWER_SELECTION_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_PIN_POWER_SELECTION.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_TYPE_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_FLASH_TYPE.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FORCE_SEND_RESUME_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_FORCE_SEND_RESUME.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_VERSION_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_SECURE_VERSION.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED2_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_RPT4_RESERVED2.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR4</name>
          <description>Programming error record register 4 of BLOCK0.</description>
          <addressOffset>0x190</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RPT4_RESERVED4_ERR</name>
              <description>Any bit equal to 1 denotes a programming error in EFUSE_RPT4_RESERVED4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_RS_ERR0</name>
          <description>Programming error record register 0 of BLOCK1-10.</description>
          <addressOffset>0x1c0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>MAC_SPI_8M_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes in BLOCK1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAC_SPI_8M_FAIL</name>
              <description>0: Means no failure and that the data of BLOCK1 is reliable; 1: Means that programming BLOCK1 data failed and the number of error bytes is over 5.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_PART1_NUM</name>
              <description>The value of this signal means the number of error bytes in BLOCK2.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_PART1_FAIL</name>
              <description>0: Means no failure and that the data of BLOCK2 is reliable; 1: Means that programming BLOCK2 data failed and the number of error bytes is over 5.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USR_DATA_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes in BLOCK3.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USR_DATA_FAIL</name>
              <description>0: Means no failure and that the data of BLOCK3 is reliable; 1: Means that programming BLOCK3 data failed and the number of error bytes is over 5.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY0_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes in KEY0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY0_FAIL</name>
              <description>0: Means no failure and that the data of KEY0 is reliable; 1: Means that programming KEY0 failed and the number of error bytes is over 5.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY1_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes in KEY1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY1_FAIL</name>
              <description>0: Means no failure and that the data of KEY1 is reliable; 1: Means that programming KEY1 failed and the number of error bytes is over 5.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY2_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes in KEY2.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY2_FAIL</name>
              <description>0: Means no failure and that the data of KEY2 is reliable; 1: Means that programming KEY2 failed and the number of error bytes is over 5.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY3_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes in KEY3.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY3_FAIL</name>
              <description>0: Means no failure and that the data of KEY3 is reliable; 1: Means that programming KEY3 failed and the number of error bytes is over 5.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY4_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes in KEY4.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY4_FAIL</name>
              <description>0: Means no failure and that the data of KEY4 is reliable; 1: Means that programming KEY4 failed and the number of error bytes is over 5.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_RS_ERR1</name>
          <description>Programming error record register 1 of BLOCK1-10.</description>
          <addressOffset>0x1c4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>KEY5_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes in KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY5_FAIL</name>
              <description>0: Means no failure and that the data of KEY5 is reliable; 1: Means that programming user data failed and the number of error bytes is over 5.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_PART2_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes in BLOCK10.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_PART2_FAIL</name>
              <description>0: Means no failure and that the data of BLOCK10 is reliable; 1: Means that programming BLOCK10 data failed and the number of error bytes is over 5.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK</name>
          <description>eFuse clock configuration register.</description>
          <addressOffset>0x1c8</addressOffset>
          <size>32</size>
          <resetValue>0x2</resetValue>
          <fields>
            <field>
              <name>EFUSE_MEM_FORCE_PD</name>
              <description>If set, forces eFuse SRAM into power-saving mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_CLK_FORCE_ON</name>
              <description>If set, forces to activate clock signal of eFuse SRAM.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EFUSE_MEM_FORCE_PU</name>
              <description>If set, forces eFuse SRAM into working mode.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EN</name>
              <description>If set, forces to enable clock signal of eFuse memory.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF</name>
          <description>eFuse operation mode configuration register.</description>
          <addressOffset>0x1cc</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OP_CODE</name>
              <description>0x5A5A: Operate programming command; 0x5AA5: Operate read command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>eFuse status register.</description>
          <addressOffset>0x1d0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>STATE</name>
              <description>Indicates the state of the eFuse state machine.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_LOAD_SW</name>
              <description>The value of OTP_LOAD_SW.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_VDDQ_C_SYNC2</name>
              <description>The value of OTP_VDDQ_C_SYNC2.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_STROBE_SW</name>
              <description>The value of OTP_STROBE_SW.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_CSB_SW</name>
              <description>The value of OTP_CSB_SW.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_PGENB_SW</name>
              <description>The value of OTP_PGENB_SW.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_VDDQ_IS_SW</name>
              <description>The value of OTP_VDDQ_IS_SW.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>REPEAT_ERR_CNT</name>
              <description>Indicates the number of error bits during programming BLOCK0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD</name>
          <description>eFuse command register.</description>
          <addressOffset>0x1d4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>READ_CMD</name>
              <description>Set this bit to send read command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PGM_CMD</name>
              <description>Set this bit to send programming command.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BLK_NUM</name>
              <description>The serial number of the block to be programmed. Value 0-10 corresponds to block number 0-10, respectively.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>eFuse raw interrupt register.</description>
          <addressOffset>0x1d8</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>READ_DONE_INT_RAW</name>
              <description>The raw bit signal for read_done interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PGM_DONE_INT_RAW</name>
              <description>The raw bit signal for pgm_done interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>eFuse interrupt status register.</description>
          <addressOffset>0x1dc</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>READ_DONE_INT_ST</name>
              <description>The status signal for read_done interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PGM_DONE_INT_ST</name>
              <description>The status signal for pgm_done interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>eFuse interrupt enable register.</description>
          <addressOffset>0x1e0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>READ_DONE_INT_ENA</name>
              <description>The enable signal for read_done interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PGM_DONE_INT_ENA</name>
              <description>The enable signal for pgm_done interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>eFuse interrupt clear register.</description>
          <addressOffset>0x1e4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>READ_DONE_INT_CLR</name>
              <description>The clear signal for read_done interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PGM_DONE_INT_CLR</name>
              <description>The clear signal for pgm_done interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DAC_CONF</name>
          <description>Controls the eFuse programming voltage.</description>
          <addressOffset>0x1e8</addressOffset>
          <size>32</size>
          <resetValue>0x1fe1c</resetValue>
          <fields>
            <field>
              <name>DAC_CLK_DIV</name>
              <description>Controls the division factor of the rising clock of the programming voltage.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_CLK_PAD_SEL</name>
              <description>Don't care.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_NUM</name>
              <description>Controls the rising period of the programming voltage.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OE_CLR</name>
              <description>Reduces the power supply of the programming voltage.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_TIM_CONF</name>
          <description>Configures read timing parameters.</description>
          <addressOffset>0x1ec</addressOffset>
          <size>32</size>
          <resetValue>0x12010101</resetValue>
          <fields>
            <field>
              <name>THR_A</name>
              <description>Configures the hold time of read operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRD</name>
              <description>Configures the length of pulse of read operation.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSUR_A</name>
              <description>Configures the setup time of read operation.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>READ_INIT_NUM</name>
              <description>Configures the initial read time of eFuse.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WR_TIM_CONF0</name>
          <description>Configuration register 0 of eFuse programming timing parameters.</description>
          <addressOffset>0x1f0</addressOffset>
          <size>32</size>
          <resetValue>0xc80101</resetValue>
          <fields>
            <field>
              <name>THP_A</name>
              <description>Configures the hold time of programming operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TPGM_INACTIVE</name>
              <description>Configures the length of pulse during programming 0 to eFuse.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TPGM</name>
              <description>Configures the length of pulse during programming 1 to eFuse.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WR_TIM_CONF1</name>
          <description>Configuration register 1 of eFuse programming timing parameters.</description>
          <addressOffset>0x1f4</addressOffset>
          <size>32</size>
          <resetValue>0x288001</resetValue>
          <fields>
            <field>
              <name>TSUP_A</name>
              <description>Configures the setup time of programming operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PWR_ON_NUM</name>
              <description>Configures the power up time for VDDQ.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WR_TIM_CONF2</name>
          <description>Configuration register 2 of eFuse programming timing parameters.</description>
          <addressOffset>0x1f8</addressOffset>
          <size>32</size>
          <resetValue>0x190</resetValue>
          <fields>
            <field>
              <name>PWR_OFF_NUM</name>
              <description>Configures the power outage time for VDDQ.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version control register.</description>
          <addressOffset>0x1fc</addressOffset>
          <size>32</size>
          <resetValue>0x19081100</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>Version control register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>EXTMEM</name>
      <description>External Memory</description>
      <groupName>EXTMEM</groupName>
      <baseAddress>0x61800000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x140</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>PRO_DCACHE_CTRL</name>
          <description>register description</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x100</resetValue>
          <fields>
            <field>
              <name>PRO_DCACHE_ENABLE</name>
              <description>The bit is used to activate the data cache. 0: disable, 1: enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_SETSIZE_MODE</name>
              <description>The bit is used to configure cache memory size.0: 8KB, 1: 16KB</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_BLOCKSIZE_MODE</name>
              <description>The bit is used to configure cache block size.0: 16 bytes, 1: 32 bytes</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_INVALIDATE_ENA</name>
              <description>The bit is used to enable invalidate operation. It will be cleared by hardware after invalidate operation done.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_INVALIDATE_DONE</name>
              <description>The bit is used to indicate invalidate operation is finished.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_DCACHE_FLUSH_ENA</name>
              <description>The bit is used to enable flush operation. It will be cleared by hardware after flush operation done.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_FLUSH_DONE</name>
              <description>The bit is used to indicate flush operation is finished.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_DCACHE_CLEAN_ENA</name>
              <description>The bit is used to enable clean operation. It will be cleared by hardware after clean operation done.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_CLEAN_DONE</name>
              <description>The bit is used to indicate clean operation is finished.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_DCACHE_LOCK0_EN</name>
              <description>The bit is used to enable pre-lock operation which is combined with PRO_DCACHE_LOCK0_ADDR_REG and PRO_DCACHE_LOCK0_SIZE_REG.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_LOCK1_EN</name>
              <description>The bit is used to enable pre-lock operation which is combined with PRO_DCACHE_LOCK1_ADDR_REG and PRO_DCACHE_LOCK1_SIZE_REG.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_AUTOLOAD_ENA</name>
              <description>The bit is used to enable and disable conditional-preload operation. It is combined with pre_dcache_autoload_done. 1: enable, 0: disable.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_AUTOLOAD_DONE</name>
              <description>The bit is used to indicate conditional-preload operation is finished.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_DCACHE_PRELOAD_ENA</name>
              <description>The bit is used to enable preload operation. It will be cleared by hardware after preload operation done.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_PRELOAD_DONE</name>
              <description>The bit is used to indicate preload operation is finished.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_DCACHE_UNLOCK_ENA</name>
              <description>The bit is used to enable unlock operation. It will be cleared by hardware after unlock operation done.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_UNLOCK_DONE</name>
              <description>The bit is used to indicate unlock operation is finished.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_DCACHE_LOCK_ENA</name>
              <description>The bit is used to enable lock operation. It will be cleared by hardware after lock operation done.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_LOCK_DONE</name>
              <description>The bit is used to indicate lock operation is finished.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_CTRL1</name>
          <description>register description</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x7</resetValue>
          <fields>
            <field>
              <name>PRO_DCACHE_MASK_BUS0</name>
              <description>The bit is used to disable dbus0, 0: enable, 1: disable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_MASK_BUS1</name>
              <description>The bit is used to disable dbus1, 0: enable, 1: disable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_MASK_BUS2</name>
              <description>The bit is used to disable dbus2, 0: enable, 1: disable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_TAG_POWER_CTRL</name>
          <description>register description</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x5</resetValue>
          <fields>
            <field>
              <name>PRO_DCACHE_TAG_MEM_FORCE_ON</name>
              <description>The bit is used to close clock gating of dcache tag memory. 1: close gating, 0: open clock gating.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_TAG_MEM_FORCE_PD</name>
              <description>The bit is used to power dcache tag memory down, 0: follow  rtc_lslp_pd, 1: power down</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_TAG_MEM_FORCE_PU</name>
              <description>The bit is used to power dcache tag memory down, 0: follow  rtc_lslp_pd, 1: power up</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_LOCK0_ADDR</name>
          <description>register description</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_DCACHE_LOCK0_ADDR</name>
              <description>The bits are used to configure the first start virtual address of data locking, which is combined with PRO_DCACHE_LOCK0_SIZE_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_LOCK0_SIZE</name>
          <description>register description</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_DCACHE_LOCK0_SIZE</name>
              <description>The bits are used to configure the first length of data locking, which is combined with PRO_DCACHE_LOCK0_ADDR_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_LOCK1_ADDR</name>
          <description>register description</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_DCACHE_LOCK1_ADDR</name>
              <description>The bits are used to configure the second start virtual address of data locking, which is combined with PRO_DCACHE_LOCK1_SIZE_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_LOCK1_SIZE</name>
          <description>register description</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_DCACHE_LOCK1_SIZE</name>
              <description>The bits are used to configure the second length of data locking, which is combined with PRO_DCACHE_LOCK1_ADDR_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_MEM_SYNC0</name>
          <description>register description</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_DCACHE_MEMSYNC_ADDR</name>
              <description>The bits are used to configure the start virtual address for invalidate, flush, clean, lock and unlock operations. The manual operations will be issued if the address is validate. The auto operations will be issued if the address is invalidate. It should be combined with PRO_DCACHE_MEM_SYNC1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_MEM_SYNC1</name>
          <description>register description</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_DCACHE_MEMSYNC_SIZE</name>
              <description>The bits are used to configure the length for invalidate, flush, clean, lock and unlock operations. The manual operations will be issued if it is validate. The auto operations will be issued if it is invalidate. It should be combined with PRO_DCACHE_MEM_SYNC0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_PRELOAD_ADDR</name>
          <description>register description</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_DCACHE_PRELOAD_ADDR</name>
              <description>The bits are used to configure the start virtual address for manual pre-load operation. It should be combined with PRO_DCACHE_PRELOAD_SIZE_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_PRELOAD_SIZE</name>
          <description>register description</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0x200</resetValue>
          <fields>
            <field>
              <name>PRO_DCACHE_PRELOAD_SIZE</name>
              <description>The bits are used to configure the length for manual pre-load operation.  It should be combined with PRO_DCACHE_PRELOAD_ADDR_REG..</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_PRELOAD_ORDER</name>
              <description>The bits are used to configure the direction of manual pre-load operation. 1: descending, 0: ascending.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_AUTOLOAD_CFG</name>
          <description>register description</description>
          <addressOffset>0x2c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_DCACHE_AUTOLOAD_MODE</name>
              <description>Reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_AUTOLOAD_STEP</name>
              <description>Reserved.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_AUTOLOAD_ORDER</name>
              <description>The bits are used to configure the direction of conditional pre-load operation. 1: descending, 0: ascending.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_AUTOLOAD_RQST</name>
              <description>The bits are used to configure trigger conditions for conditional pre-load. 0/3: cache miss, 1: cache hit, 2: both cache miss and hit.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_AUTOLOAD_SIZE</name>
              <description>The bits are used to configure the numbers of the cache block for the issuing conditional pre-load operation.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_AUTOLOAD_SCT0_ENA</name>
              <description>The bits are used to enable the second section for conditional pre-load operation.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_AUTOLOAD_SCT1_ENA</name>
              <description>The bits are used to enable the first section for conditional pre-load operation.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_AUTOLOAD_SECTION0_ADDR</name>
          <description>register description</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_DCACHE_AUTOLOAD_SCT0_ADDR</name>
              <description>The bits are used to configure the start virtual address of the first section for conditional pre-load operation. It should be combined with pro_dcache_autoload_sct0_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_AUTOLOAD_SECTION0_SIZE</name>
          <description>register description</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <resetValue>0x8000</resetValue>
          <fields>
            <field>
              <name>PRO_DCACHE_AUTOLOAD_SCT0_SIZE</name>
              <description>The bits are used to configure the length of the first section for conditional pre-load operation. It should be combined with pro_dcache_autoload_sct0_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_AUTOLOAD_SECTION1_ADDR</name>
          <description>register description</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_DCACHE_AUTOLOAD_SCT1_ADDR</name>
              <description>The bits are used to configure the start virtual address of the second section for conditional pre-load operation. It should be combined with pro_dcache_autoload_sct1_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_AUTOLOAD_SECTION1_SIZE</name>
          <description>register description</description>
          <addressOffset>0x3c</addressOffset>
          <size>32</size>
          <resetValue>0x8000</resetValue>
          <fields>
            <field>
              <name>PRO_DCACHE_AUTOLOAD_SCT1_SIZE</name>
              <description>The bits are used to configure the length of the second section for conditional pre-load operation. It should be combined with pro_dcache_autoload_sct1_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_CTRL</name>
          <description>register description</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <resetValue>0x100</resetValue>
          <fields>
            <field>
              <name>PRO_ICACHE_ENABLE</name>
              <description>The bit is used to activate the data cache. 0: disable, 1: enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_SETSIZE_MODE</name>
              <description>The bit is used to configure cache memory size.0: 8KB, 1: 16KB</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_BLOCKSIZE_MODE</name>
              <description>The bit is used to configure cache block size.0: 16 bytes, 1: 32 bytes</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_INVALIDATE_ENA</name>
              <description>The bit is used to enable invalidate operation. It will be cleared by hardware after invalidate operation done.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_INVALIDATE_DONE</name>
              <description>The bit is used to indicate invalidate operation is finished.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_ICACHE_LOCK0_EN</name>
              <description>The bit is used to enable pre-lock operation which is combined with PRO_ICACHE_LOCK0_ADDR_REG and PRO_ICACHE_LOCK0_SIZE_REG.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_LOCK1_EN</name>
              <description>The bit is used to enable pre-lock operation which is combined with PRO_ICACHE_LOCK1_ADDR_REG and PRO_ICACHE_LOCK1_SIZE_REG.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_AUTOLOAD_ENA</name>
              <description>The bit is used to enable and disable conditional-preload operation. It is combined with pre_dcache_autoload_done. 1: enable, 0: disable.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_AUTOLOAD_DONE</name>
              <description>The bit is used to indicate conditional-preload operation is finished.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_ICACHE_PRELOAD_ENA</name>
              <description>The bit is used to enable preload operation. It will be cleared by hardware after preload operation done.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_PRELOAD_DONE</name>
              <description>The bit is used to indicate preload operation is finished.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_ICACHE_UNLOCK_ENA</name>
              <description>The bit is used to enable unlock operation. It will be cleared by hardware after unlock operation done.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_UNLOCK_DONE</name>
              <description>The bit is used to indicate unlock operation is finished.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_ICACHE_LOCK_ENA</name>
              <description>The bit is used to enable lock operation. It will be cleared by hardware after lock operation done.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_LOCK_DONE</name>
              <description>The bit is used to indicate lock operation is finished.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_CTRL1</name>
          <description>register description</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <resetValue>0x7</resetValue>
          <fields>
            <field>
              <name>PRO_ICACHE_MASK_BUS0</name>
              <description>The bit is used to disable ibus0, 0: enable, 1: disable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_MASK_BUS1</name>
              <description>The bit is used to disable ibus1, 0: enable, 1: disable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_MASK_BUS2</name>
              <description>The bit is used to disable ibus2, 0: enable, 1: disable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_TAG_POWER_CTRL</name>
          <description>register description</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <resetValue>0x5</resetValue>
          <fields>
            <field>
              <name>PRO_ICACHE_TAG_MEM_FORCE_ON</name>
              <description>The bit is used to close clock gating of icache tag memory. 1: close gating, 0: open clock gating.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_TAG_MEM_FORCE_PD</name>
              <description>The bit is used to power icache tag memory down, 0: follow rtc_lslp, 1: power down</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_TAG_MEM_FORCE_PU</name>
              <description>The bit is used to power icache tag memory down, 0: follow rtc_lslp, 1: power up</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_LOCK0_ADDR</name>
          <description>register description</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_LOCK0_ADDR</name>
              <description>The bits are used to configure the first start virtual address of data locking, which is combined with PRO_ICACHE_LOCK0_SIZE_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_LOCK0_SIZE</name>
          <description>register description</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_LOCK0_SIZE</name>
              <description>The bits are used to configure the first length of data locking, which is combined with PRO_ICACHE_LOCK0_ADDR_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_LOCK1_ADDR</name>
          <description>register description</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_LOCK1_ADDR</name>
              <description>The bits are used to configure the second start virtual address of data locking, which is combined with PRO_ICACHE_LOCK1_SIZE_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_LOCK1_SIZE</name>
          <description>register description</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_LOCK1_SIZE</name>
              <description>The bits are used to configure the second length of data locking, which is combined with PRO_ICACHE_LOCK1_ADDR_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_MEM_SYNC0</name>
          <description>register description</description>
          <addressOffset>0x5c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_MEMSYNC_ADDR</name>
              <description>The bits are used to configure the start virtual address for invalidate, flush, clean, lock and unlock operations. The manual operations will be issued if the address is validate. The auto operations will be issued if the address is invalidate. It should be combined with PRO_ICACHE_MEM_SYNC1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_MEM_SYNC1</name>
          <description>register description</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_MEMSYNC_SIZE</name>
              <description>The bits are used to configure the length for invalidate, flush, clean, lock and unlock operations. The manual operations will be issued if it is validate. The auto operations will be issued if it is invalidate. It should be combined with PRO_ICACHE_MEM_SYNC0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_PRELOAD_ADDR</name>
          <description>register description</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_PRELOAD_ADDR</name>
              <description>The bits are used to configure the start virtual address for manual pre-load operation. It should be combined with PRO_ICACHE_PRELOAD_SIZE_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_PRELOAD_SIZE</name>
          <description>register description</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <resetValue>0x200</resetValue>
          <fields>
            <field>
              <name>PRO_ICACHE_PRELOAD_SIZE</name>
              <description>The bits are used to configure the length for manual pre-load operation.  It should be combined with PRO_ICACHE_PRELOAD_ADDR_REG..</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_PRELOAD_ORDER</name>
              <description>The bits are used to configure the direction of manual pre-load operation. 1: descending, 0: ascending.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_AUTOLOAD_CFG</name>
          <description>register description</description>
          <addressOffset>0x6c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_AUTOLOAD_MODE</name>
              <description>Reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_AUTOLOAD_STEP</name>
              <description>Reserved.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_AUTOLOAD_ORDER</name>
              <description>The bits are used to configure the direction of conditional pre-load operation. 1: descending, 0: ascending.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_AUTOLOAD_RQST</name>
              <description>The bits are used to configure trigger conditions for conditional pre-load. 0/3: cache miss, 1: cache hit, 2: both cache miss and hit.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_AUTOLOAD_SIZE</name>
              <description>The bits are used to configure the numbers of the cache block for the issuing conditional pre-load operation.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_AUTOLOAD_SCT0_ENA</name>
              <description>The bits are used to enable the second section for conditional pre-load operation.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_AUTOLOAD_SCT1_ENA</name>
              <description>The bits are used to enable the first section for conditional pre-load operation.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_AUTOLOAD_SECTION0_ADDR</name>
          <description>register description</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_AUTOLOAD_SCT0_ADDR</name>
              <description>The bits are used to configure the start virtual address of the first section for conditional pre-load operation. It should be combined with pro_icache_autoload_sct0_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_AUTOLOAD_SECTION0_SIZE</name>
          <description>register description</description>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <resetValue>0x8000</resetValue>
          <fields>
            <field>
              <name>PRO_ICACHE_AUTOLOAD_SCT0_SIZE</name>
              <description>The bits are used to configure the length of the first section for conditional pre-load operation. It should be combined with pro_icache_autoload_sct0_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_AUTOLOAD_SECTION1_ADDR</name>
          <description>register description</description>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_AUTOLOAD_SCT1_ADDR</name>
              <description>The bits are used to configure the start virtual address of the second section for conditional pre-load operation. It should be combined with pro_icache_autoload_sct1_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_AUTOLOAD_SECTION1_SIZE</name>
          <description>register description</description>
          <addressOffset>0x7c</addressOffset>
          <size>32</size>
          <resetValue>0x8000</resetValue>
          <fields>
            <field>
              <name>PRO_ICACHE_AUTOLOAD_SCT1_SIZE</name>
              <description>The bits are used to configure the length of the second section for conditional pre-load operation. It should be combined with pro_icache_autoload_sct1_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_PRELOAD_CNT</name>
          <description>register description</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IC_PRELOAD_CNT</name>
              <description>The bits are used to count the number of issued pre-load which include manual pre-load and conditional pre-load.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_PRELOAD_MISS_CNT</name>
          <description>register description</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IC_PRELOAD_MISS_CNT</name>
              <description>The bits are used to count the number of missed pre-load which include manual pre-load and conditional pre-load.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS2_ABANDON_CNT</name>
          <description>register description</description>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IBUS2_ABANDON_CNT</name>
              <description>The bits are used to count the number of the abandoned ibus2 access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS1_ABANDON_CNT</name>
          <description>register description</description>
          <addressOffset>0x8c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IBUS1_ABANDON_CNT</name>
              <description>The bits are used to count the number of the abandoned ibus1 access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS0_ABANDON_CNT</name>
          <description>register description</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IBUS0_ABANDON_CNT</name>
              <description>The bits are used to count the number of the abandoned ibus0 access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS2_ACS_MISS_CNT</name>
          <description>register description</description>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IBUS2_ACS_MISS_CNT</name>
              <description>The bits are used to count the number of the cache miss caused by ibus2 access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS1_ACS_MISS_CNT</name>
          <description>register description</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IBUS1_ACS_MISS_CNT</name>
              <description>The bits are used to count the number of the cache miss caused by ibus1 access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS0_ACS_MISS_CNT</name>
          <description>register description</description>
          <addressOffset>0x9c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IBUS0_ACS_MISS_CNT</name>
              <description>The bits are used to count the number of the cache miss caused by ibus0 access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS2_ACS_CNT</name>
          <description>register description</description>
          <addressOffset>0xa0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IBUS2_ACS_CNT</name>
              <description>The bits are used to count the number of ibus2 access icache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS1_ACS_CNT</name>
          <description>register description</description>
          <addressOffset>0xa4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IBUS1_ACS_CNT</name>
              <description>The bits are used to count the number of ibus1 access icache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS0_ACS_CNT</name>
          <description>register description</description>
          <addressOffset>0xa8</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IBUS0_ACS_CNT</name>
              <description>The bits are used to count the number of ibus0 access icache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DC_PRELOAD_CNT</name>
          <description>register description</description>
          <addressOffset>0xac</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DC_PRELOAD_CNT</name>
              <description>The bits are used to count the number of issued pre-load which include manual pre-load and conditional pre-load.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DC_PRELOAD_EVICT_CNT</name>
          <description>register description</description>
          <addressOffset>0xb0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DC_PRELOAD_EVICT_CNT</name>
              <description>The bits are used to count the number of cache evictions by pre-load which include manual pre-load and conditional pre-load.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DC_PRELOAD_MISS_CNT</name>
          <description>register description</description>
          <addressOffset>0xb4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DC_PRELOAD_MISS_CNT</name>
              <description>The bits are used to count the number of missed pre-load which include manual pre-load and conditional pre-load.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS2_ABANDON_CNT</name>
          <description>register description</description>
          <addressOffset>0xb8</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DBUS2_ABANDON_CNT</name>
              <description>The bits are used to count the number of the abandoned dbus2 access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS1_ABANDON_CNT</name>
          <description>register description</description>
          <addressOffset>0xbc</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DBUS1_ABANDON_CNT</name>
              <description>The bits are used to count the number of the abandoned dbus1 access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS0_ABANDON_CNT</name>
          <description>register description</description>
          <addressOffset>0xc0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DBUS0_ABANDON_CNT</name>
              <description>The bits are used to count the number of the abandoned dbus0 access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS2_ACS_WB_CNT</name>
          <description>register description</description>
          <addressOffset>0xc4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DBUS2_ACS_WB_CNT</name>
              <description>The bits are used to count the number of cache evictions by dbus2 access cache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS1_ACS_WB_CNT</name>
          <description>register description</description>
          <addressOffset>0xc8</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DBUS1_ACS_WB_CNT</name>
              <description>The bits are used to count the number of cache evictions by dbus1 access cache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS0_ACS_WB_CNT</name>
          <description>register description</description>
          <addressOffset>0xcc</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DBUS0_ACS_WB_CNT</name>
              <description>The bits are used to count the number of cache evictions by dbus0 access cache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS2_ACS_MISS_CNT</name>
          <description>register description</description>
          <addressOffset>0xd0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DBUS2_ACS_MISS_CNT</name>
              <description>The bits are used to count the number of the cache miss caused by dbus2 access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS1_ACS_MISS_CNT</name>
          <description>register description</description>
          <addressOffset>0xd4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DBUS1_ACS_MISS_CNT</name>
              <description>The bits are used to count the number of the cache miss caused by dbus1 access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS0_ACS_MISS_CNT</name>
          <description>register description</description>
          <addressOffset>0xd8</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DBUS0_ACS_MISS_CNT</name>
              <description>The bits are used to count the number of the cache miss caused by dbus0 access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS2_ACS_CNT</name>
          <description>register description</description>
          <addressOffset>0xdc</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DBUS2_ACS_CNT</name>
              <description>The bits are used to count the number of dbus2 access dcache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS1_ACS_CNT</name>
          <description>register description</description>
          <addressOffset>0xe0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DBUS1_ACS_CNT</name>
              <description>The bits are used to count the number of dbus1 access dcache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS0_ACS_CNT</name>
          <description>register description</description>
          <addressOffset>0xe4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DBUS0_ACS_CNT</name>
              <description>The bits are used to count the number of dbus0 access dcache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_DBG_INT_ENA</name>
          <description>register description</description>
          <addressOffset>0xe8</addressOffset>
          <size>32</size>
          <resetValue>0x1</resetValue>
          <fields>
            <field>
              <name>CACHE_DBG_EN</name>
              <description>The bit is used to activate the cache track function. 1: enable, 0: disable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IBUS_ACS_MSK_IC_INT_ENA</name>
              <description>The bit is used to enable interrupt by cpu access icache while the corresponding ibus is disabled which include speculative access.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IBUS_CNT_OVF_INT_ENA</name>
              <description>The bit is used to enable interrupt by ibus counter overflow.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IC_SYNC_SIZE_FAULT_INT_ENA</name>
              <description>The bit is used to enable interrupt by manual sync configurations fault.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IC_PRELOAD_SIZE_FAULT_INT_ENA</name>
              <description>The bit is used to enable interrupt by manual pre-load configurations fault.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_REJECT_INT_ENA</name>
              <description>The bit is used to enable interrupt by authentication fail.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_SET_PRELOAD_ILG_INT_ENA</name>
              <description>The bit is used to enable interrupt by illegal writing preload registers of icache while icache is busy to issue lock,sync and pre-load operations.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_SET_SYNC_ILG_INT_ENA</name>
              <description>The bit is used to enable interrupt by illegal writing sync registers of icache while icache is busy to issue lock,sync and pre-load operations.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_SET_LOCK_ILG_INT_ENA</name>
              <description>The bit is used to enable interrupt by illegal writing lock registers of icache while icache is busy to issue lock,sync or pre-load operations.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBUS_ACS_MSK_DC_INT_ENA</name>
              <description>The bit is used to enable interrupt by cpu access dcache while the corresponding dbus is disabled which include speculative access.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBUS_CNT_OVF_INT_ENA</name>
              <description>The bit is used to enable interrupt by dbus counter overflow.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DC_SYNC_SIZE_FAULT_INT_ENA</name>
              <description>The bit is used to enable interrupt by manual sync configurations fault.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DC_PRELOAD_SIZE_FAULT_INT_ENA</name>
              <description>The bit is used to enable interrupt by manual pre-load configurations fault.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_WRITE_FLASH_INT_ENA</name>
              <description>The bit is used to enable interrupt by dcache trying to write flash.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_REJECT_INT_ENA</name>
              <description>The bit is used to enable interrupt by authentication fail.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_SET_PRELOAD_ILG_INT_ENA</name>
              <description>The bit is used to enable interrupt by illegal writing preload registers of dcache while dcache is busy to issue lock,sync and pre-load operations.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_SET_SYNC_ILG_INT_ENA</name>
              <description>The bit is used to enable interrupt by illegal writing sync registers of dcache while dcache is busy to issue lock,sync and pre-load operations.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_SET_LOCK_ILG_INT_ENA</name>
              <description>The bit is used to enable interrupt by illegal writing lock registers of dcache while dcache is busy to issue lock,sync or pre-load operations.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MMU_ENTRY_FAULT_INT_ENA</name>
              <description>The bit is used to enable interrupt by mmu entry fault.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_DBG_INT_CLR</name>
          <description>register description</description>
          <addressOffset>0xec</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IBUS_ACS_MSK_IC_INT_CLR</name>
              <description>The bit is used to clear interrupt by cpu access icache while the corresponding ibus is disabled or icache is disabled which include speculative access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IBUS_CNT_OVF_INT_CLR</name>
              <description>The bit is used to clear interrupt by ibus counter overflow.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IC_SYNC_SIZE_FAULT_INT_CLR</name>
              <description>The bit is used to clear interrupt by manual sync configurations fault.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IC_PRELOAD_SIZE_FAULT_INT_CLR</name>
              <description>The bit is used to clear interrupt by manual pre-load configurations fault.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ICACHE_REJECT_INT_CLR</name>
              <description>The bit is used to clear interrupt by authentication fail.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ICACHE_SET_ILG_INT_CLR</name>
              <description>The bit is used to clear interrupt by illegal writing lock registers of icache while icache is busy to issue lock,sync or pre-load operations.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DBUS_ACS_MSK_DC_INT_CLR</name>
              <description>The bit is used to clear interrupt by cpu access dcache while the corresponding dbus is disabled or dcache is disabled which include speculative access.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DBUS_CNT_OVF_INT_CLR</name>
              <description>The bit is used to clear interrupt by dbus counter overflow.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DC_SYNC_SIZE_FAULT_INT_CLR</name>
              <description>The bit is used to clear interrupt by manual sync configurations fault.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DC_PRELOAD_SIZE_FAULT_INT_CLR</name>
              <description>The bit is used to clear interrupt by manual pre-load configurations fault.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DCACHE_WRITE_FLASH_INT_CLR</name>
              <description>The bit is used to clear interrupt by dcache trying to write flash.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DCACHE_REJECT_INT_CLR</name>
              <description>The bit is used to clear interrupt by authentication fail.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DCACHE_SET_ILG_INT_CLR</name>
              <description>The bit is used to clear interrupt by illegal writing lock registers of dcache while dcache is busy to issue lock,sync or pre-load operations.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MMU_ENTRY_FAULT_INT_CLR</name>
              <description>The bit is used to clear interrupt by mmu entry fault.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_DBG_STATUS0</name>
          <description>register description</description>
          <addressOffset>0xf0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IBUS0_ACS_MSK_ICACHE_ST</name>
              <description>The bit is used to indicate interrupt by cpu access icache while the ibus0 is disabled or icache is disabled which include speculative access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS1_ACS_MSK_ICACHE_ST</name>
              <description>The bit is used to indicate interrupt by cpu access icache while the ibus1 is disabled or icache is disabled which include speculative access.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS2_ACS_MSK_ICACHE_ST</name>
              <description>The bit is used to indicate interrupt by cpu access icache while the ibus2 is disabled or icache is disabled which include speculative access.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS0_ACS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by ibus0 counter overflow.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS1_ACS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by ibus1 counter overflow.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS2_ACS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by ibus2 counter overflow.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS0_ACS_MISS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by ibus0 miss counter overflow.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS1_ACS_MISS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by ibus1 miss counter overflow.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS2_ACS_MISS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by ibus2 miss counter overflow.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS0_ABANDON_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by ibus0 abandon counter overflow.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS1_ABANDON_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by ibus1 abandon counter overflow.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS2_ABANDON_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by ibus2 abandon counter overflow.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IC_PRELOAD_MISS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by pre-load miss counter overflow.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IC_PRELOAD_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by pre-load counter overflow.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IC_SYNC_SIZE_FAULT_ST</name>
              <description>The bit is used to indicate interrupt by manual sync configurations fault.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IC_PRELOAD_SIZE_FAULT_ST</name>
              <description>The bit is used to indicate interrupt by manual pre-load configurations fault.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ICACHE_REJECT_ST</name>
              <description>The bit is used to indicate interrupt by authentication fail.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ICACHE_SET_PRELOAD_ILG_ST</name>
              <description>The bit is used to indicate interrupt by illegal writing preload registers of icache while icache is busy to issue lock,sync and pre-load operations.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ICACHE_SET_SYNC_ILG_ST</name>
              <description>The bit is used to indicate interrupt by illegal writing sync registers of icache while icache is busy to issue lock,sync and pre-load operations.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ICACHE_SET_LOCK_ILG_ST</name>
              <description>The bit is used to indicate interrupt by illegal writing lock registers of icache while icache is busy to issue lock,sync or pre-load operations.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_DBG_STATUS1</name>
          <description>register description</description>
          <addressOffset>0xf4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DBUS0_ACS_MSK_DCACHE_ST</name>
              <description>The bit is used to indicate interrupt by cpu access dcache while the dbus0 is disabled or dcache is disabled which include speculative access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS1_ACS_MSK_DCACHE_ST</name>
              <description>The bit is used to indicate interrupt by cpu access dcache while the dbus1 is disabled or dcache is disabled which include speculative access.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS2_ACS_MSK_DCACHE_ST</name>
              <description>The bit is used to indicate interrupt by cpu access dcache while the dbus2 is disabled or dcache is disabled which include speculative access.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS0_ACS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus0 counter overflow.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS1_ACS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus1 counter overflow.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS2_ACS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus2 counter overflow.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS0_ACS_MISS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus0 miss counter overflow.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS1_ACS_MISS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus1 miss counter overflow.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS2_ACS_MISS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus2 miss counter overflow.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS0_ACS_WB_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus0 eviction counter overflow.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS1_ACS_WB_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus1 eviction counter overflow.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS2_ACS_WB_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus2 eviction counter overflow.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS0_ABANDON_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus0 abandon counter overflow.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS1_ABANDON_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus1 abandon counter overflow.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS2_ABANDON_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus2 abandon counter overflow.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DC_PRELOAD_MISS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by pre-load miss counter overflow.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DC_PRELOAD_EVICT_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by pre-load eviction counter overflow.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DC_PRELOAD_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by pre-load counter overflow.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DC_SYNC_SIZE_FAULT_ST</name>
              <description>The bit is used to indicate interrupt by manual sync configurations fault.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DC_PRELOAD_SIZE_FAULT_ST</name>
              <description>The bit is used to indicate interrupt by manual pre-load configurations fault.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCACHE_WRITE_FLASH_ST</name>
              <description>The bit is used to indicate interrupt by dcache trying to write flash.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCACHE_REJECT_ST</name>
              <description>The bit is used to indicate interrupt by authentication fail.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCACHE_SET_PRELOAD_ILG_ST</name>
              <description>The bit is used to indicate interrupt by illegal writing preload registers of icache while icache is busy to issue lock,sync and pre-load operations.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCACHE_SET_SYNC_ILG_ST</name>
              <description>The bit is used to indicate interrupt by illegal writing sync registers of icache while icache is busy to issue lock,sync and pre-load operations.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCACHE_SET_LOCK_ILG_ST</name>
              <description>The bit is used to indicate interrupt by illegal writing lock registers of icache while icache is busy to issue lock,sync or pre-load operations.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MMU_ENTRY_FAULT_ST</name>
              <description>The bit is used to indicate interrupt by mmu entry fault.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_CACHE_ACS_CNT_CLR</name>
          <description>register description</description>
          <addressOffset>0xf8</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_DCACHE_ACS_CNT_CLR</name>
              <description>The bit is used to clear dcache counter which include DC_PRELOAD_CNT_REG, DC_PRELOAD_EVICT_CNT_REG, DC_PRELOAD_MISS_CNT_REG, DBUS0-2_ABANDON_CNT_REG, DBUS0-2_ACS_WB_CNT_REG, DBUS0-2_ACS_MISS_CNT_REG and DBUS0-2_ACS_CNT_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PRO_ICACHE_ACS_CNT_CLR</name>
              <description>The bit is used to clear icache counter which include IC_PRELOAD_CNT_REG, IC_PRELOAD_MISS_CNT_REG, IBUS0-2_ABANDON_CNT_REG, IBUS0-2_ACS_MISS_CNT_REG and IBUS0-2_ACS_CNT_REG.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_REJECT_ST</name>
          <description>register description</description>
          <addressOffset>0xfc</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_DCACHE_TAG_ATTR</name>
              <description>The bits are used to indicate the attribute of data from external memory when authentication fail. 0: invalidate, 1: execute-able, 2: read-able, 4: write-able.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_DCACHE_CPU_ATTR</name>
              <description>The bits are used to indicate the attribute of CPU access dcache when authentication fail. 0: invalidate, 1: execute-able, 2: read-able, 4: write-able.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_REJECT_VADDR</name>
          <description>register description</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_DCACHE_CPU_VADDR</name>
              <description>The bits are used to indicate the virtual address of CPU access dcache when authentication fail.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_REJECT_ST</name>
          <description>register description</description>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_TAG_ATTR</name>
              <description>The bits are used to indicate the attribute of data from external memory when authentication fail. 0: invalidate, 1: execute-able, 2: read-able, 4: write-able.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_ICACHE_CPU_ATTR</name>
              <description>The bits are used to indicate the attribute of CPU access icache when authentication fail. 0: invalidate, 1: execute-able, 2: read-able</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_REJECT_VADDR</name>
          <description>register description</description>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_CPU_VADDR</name>
              <description>The bits are used to indicate the virtual address of CPU access icache when authentication fail.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_CACHE_MMU_FAULT_CONTENT</name>
          <description>register description</description>
          <addressOffset>0x10c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_CACHE_MMU_FAULT_CONTENT</name>
              <description>The bits are used to indicate the content of mmu entry which cause mmu fault..</description>
              <bitOffset>0</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_CACHE_MMU_FAULT_CODE</name>
              <description>The bits are used to indicate the operations which cause mmu fault occurrence. 0: default, 1: cpu miss, 2: preload miss, 3: flush, 4: cpu miss evict recovery address, 5: load miss evict recovery address, 6: external dma tx, 7: external dma rx</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_CACHE_MMU_FAULT_VADDR</name>
          <description>register description</description>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_CACHE_MMU_FAULT_VADDR</name>
              <description>The bits are used to indicate the virtual address which cause mmu fault..</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_CACHE_WRAP_AROUND_CTRL</name>
          <description>register description</description>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_CACHE_FLASH_WRAP_AROUND</name>
              <description>The bit is used to enable wrap around mode when read data from flash.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_CACHE_SRAM_RD_WRAP_AROUND</name>
              <description>The bit is used to enable wrap around mode when read data from spiram.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_CACHE_MMU_POWER_CTRL</name>
          <description>register description</description>
          <addressOffset>0x118</addressOffset>
          <size>32</size>
          <resetValue>0x5</resetValue>
          <fields>
            <field>
              <name>PRO_CACHE_MMU_MEM_FORCE_ON</name>
              <description>The bit is used to enable clock gating to save power when access mmu memory, 0: enable, 1: disable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_CACHE_MMU_MEM_FORCE_PD</name>
              <description>The bit is used to power mmu memory down, 0: follow_rtc_lslp_pd, 1: power down</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_CACHE_MMU_MEM_FORCE_PU</name>
              <description>The bit is used to power mmu memory down, 0: follow_rtc_lslp_pd, 1: power up</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_CACHE_STATE</name>
          <description>register description</description>
          <addressOffset>0x11c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_STATE</name>
              <description>The bit is used to indicate icache main fsm is in idle state or not. 1: in idle state,  0: not in idle state</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_DCACHE_STATE</name>
              <description>The bit is used to indicate dcache main fsm is in idle state or not. 1: in idle state,  0: not in idle state</description>
              <bitOffset>12</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_ENCRYPT_DECRYPT_RECORD_DISABLE</name>
          <description>register description</description>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RECORD_DISABLE_DB_ENCRYPT</name>
              <description>Reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RECORD_DISABLE_G0CB_DECRYPT</name>
              <description>Reserved.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_ENCRYPT_DECRYPT_CLK_FORCE_ON</name>
          <description>register description</description>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <resetValue>0x7</resetValue>
          <fields>
            <field>
              <name>CLK_FORCE_ON_DB_ENCRYPT</name>
              <description>The bit is used to close clock gating of encrypt clock. 1: close gating, 0: open clock gating.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_FORCE_ON_G0CB_DECRYPT</name>
              <description>The bit is used to close clock gating of decrypt clock. 1: close gating, 0: open clock gating.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_FORCE_ON_AUTOMATIC_ENCRYPT_DECRYPT</name>
              <description>The bit is used to close clock gating of encrypt and decrypt clock. 1: close gating, 0: open clock gating.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_BRIDGE_ARBITER_CTRL</name>
          <description>register description</description>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>ALLOC_WB_HOLD_ARBITER</name>
              <description>Reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_PRELOAD_INT_CTRL</name>
          <description>register description</description>
          <addressOffset>0x12c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_PRELOAD_INT_ST</name>
              <description>The bit is used to indicate the interrupt by icache pre-load done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_ICACHE_PRELOAD_INT_ENA</name>
              <description>The bit is used to enable the interrupt by icache pre-load done.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_PRELOAD_INT_CLR</name>
              <description>The bit is used to clear the interrupt by icache pre-load done.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PRO_DCACHE_PRELOAD_INT_ST</name>
              <description>The bit is used to indicate the interrupt by dcache pre-load done.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_DCACHE_PRELOAD_INT_ENA</name>
              <description>The bit is used to enable the interrupt by dcache pre-load done.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_PRELOAD_INT_CLR</name>
              <description>The bit is used to clear the interrupt by dcache pre-load done.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_SYNC_INT_CTRL</name>
          <description>register description</description>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_ICACHE_SYNC_INT_ST</name>
              <description>The bit is used to indicate the interrupt by icache sync done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_ICACHE_SYNC_INT_ENA</name>
              <description>The bit is used to enable the interrupt by icache sync done.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_ICACHE_SYNC_INT_CLR</name>
              <description>The bit is used to clear the interrupt by icache sync done.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PRO_DCACHE_SYNC_INT_ST</name>
              <description>The bit is used to indicate the interrupt by dcache sync done.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRO_DCACHE_SYNC_INT_ENA</name>
              <description>The bit is used to enable the interrupt by dcache sync done.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DCACHE_SYNC_INT_CLR</name>
              <description>The bit is used to clear the interrupt by dcache sync done.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_CONF_MISC</name>
          <description>register description</description>
          <addressOffset>0x134</addressOffset>
          <size>32</size>
          <resetValue>0x3</resetValue>
          <fields>
            <field>
              <name>PRO_CACHE_IGNORE_PRELOAD_MMU_ENTRY_FAULT</name>
              <description>The bit is used to disable checking mmu entry fault by preload operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_CACHE_IGNORE_SYNC_MMU_ENTRY_FAULT</name>
              <description>The bit is used to disable checking mmu entry fault by sync operation.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_GATE</name>
          <description>register description</description>
          <addressOffset>0x138</addressOffset>
          <size>32</size>
          <resetValue>0x1</resetValue>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>Reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_EXTMEM_REG_DATE</name>
          <description>register description</description>
          <addressOffset>0x3fc</addressOffset>
          <size>32</size>
          <resetValue>0x1904180</resetValue>
          <fields>
            <field>
              <name>PRO_EXTMEM_REG_DATE</name>
              <description>Reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>GPIO</name>
      <description>General Purpose Input/Output</description>
      <groupName>GPIO</groupName>
      <baseAddress>0x3f404000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x634</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>GPIO</name>
        <value>23</value>
      </interrupt>
      <interrupt>
        <name>GPIO_NMI</name>
        <value>24</value>
      </interrupt>
      <interrupt>
        <name>GPIO_INTR_2</name>
        <value>25</value>
      </interrupt>
      <interrupt>
        <name>GPIO_NMI_2</name>
        <value>26</value>
      </interrupt>
      <registers>
        <register>
          <name>BT_SELECT</name>
          <description>GPIO bit select register</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>BT_SEL</name>
              <description>Reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT</name>
          <description>GPIO0 ~ 31 output register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DATA_ORIG</name>
              <description>GPIO0 ~ 31 output value in simple GPIO output mode. The values of bit0 ~ bit31 correspond to the output value of GPIO0 ~ GPIO31 respectively. Bit22 ~ bit25 are invalid.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_W1TS</name>
          <description>GPIO0 ~ 31 output bit set register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OUT_W1TS</name>
              <description>GPIO0 ~ 31 output set register. If the value 1 is written to a bit here, the corre- sponding bit in GPIO_OUT_REG will be set to 1. Recommended operation: use this register to set GPIO_OUT_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_W1TC</name>
          <description>GPIO0 ~ 31 output bit clear register</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OUT_W1TC</name>
              <description>GPIO0 ~ 31 output clear register. If the value 1 is written to a bit here, the cor- responding bit in GPIO_OUT_REG will be cleared. Recommended operation: use this register to clear GPIO_OUT_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT1</name>
          <description>GPIO32 ~ 53 output register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DATA_ORIG</name>
              <description>GPIO32 ~ 53 output value in simple GPIO output mode. The values of bit0 ~ bit13 correspond to GPIO32 ~ GPIO45. Bit14 ~ bit21 are invalid.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT1_W1TS</name>
          <description>GPIO32 ~ 53 output bit set register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OUT1_W1TS</name>
              <description>GPIO32 ~ 53 output value set register. If the value 1 is written to a bit here, the corresponding bit in GPIO_OUT1_REG will be set to 1. Recommended operation: use this register to set GPIO_OUT1_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT1_W1TC</name>
          <description>GPIO32 ~ 53 output bit clear register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OUT1_W1TC</name>
              <description>GPIO32 ~ 53 output value clear register. If the value 1 is written to a bit here, the corresponding bit in GPIO_OUT1_REG will be cleared. Recommended operation: use this register to clear GPIO_OUT1_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDIO_SELECT</name>
          <description>GPIO SDIO selection register</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SDIO_SEL</name>
              <description>Reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE</name>
          <description>GPIO0 ~ 31 output enable register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DATA</name>
              <description>GPIO0~31 output enable register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE_W1TS</name>
          <description>GPIO0 ~ 31 output enable bit set register</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>ENABLE_W1TS</name>
              <description>GPIO0 ~ 31 output enable set register. If the value 1 is written to a bit here, the corresponding bit in GPIO_ENABLE_REG will be set to 1. Recommended operation: use this register to set GPIO_ENABLE_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE_W1TC</name>
          <description>GPIO0 ~ 31 output enable bit clear register</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>ENABLE_W1TC</name>
              <description>GPIO0 ~ 31 output enable clear register. If the value 1 is written to a bit here, the corresponding bit in GPIO_ENABLE_REG will be cleared. Recommended operation: use this register to clear GPIO_ENABLE_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE1</name>
          <description>GPIO32 ~ 53 output enable register</description>
          <addressOffset>0x2c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DATA</name>
              <description>GPIO32~53 output enable register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE1_W1TS</name>
          <description>GPIO32 ~ 53 output enable bit set register</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>ENABLE1_W1TS</name>
              <description>GPIO32 ~ 53 output enable set register. If the value 1 is written to a bit here, the corresponding bit in GPIO_ENABLE1_REG will be set to 1. Recommended operation: use this register to set GPIO_ENABLE1_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE1_W1TC</name>
          <description>GPIO32 ~ 53 output enable bit clear register</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>ENABLE1_W1TC</name>
              <description>GPIO32 ~ 53 output enable clear register. If the value 1 is written to a bit here, the corresponding bit in GPIO_ENABLE1_REG will be cleared. Recommended operation: use this register to clear GPIO_ENABLE1_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STRAP</name>
          <description>Bootstrap pin value register</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>STRAPPING</name>
              <description>GPIO strapping values: bit4 ~ bit2 correspond to stripping pins GPIO45, GPIO0, and GPIO46 respectively.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN</name>
          <description>GPIO0 ~ 31 input register</description>
          <addressOffset>0x3c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DATA_NEXT</name>
              <description>GPIO0 ~ 31 input value. Each bit represents a pad input value, 1 for high level and 0 for low level.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN1</name>
          <description>GPIO32 ~ 53 input register</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IN_DATA1_NEXT</name>
              <description>GPIO32 ~ 53 input value. Each bit represents a pad input value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>GPIO0 ~ 31 interrupt status register</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>INTERRUPT</name>
              <description>GPIO0 ~ 31 interrupt status register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS_W1TS</name>
          <description>GPIO0 ~ 31 interrupt status bit set register</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>STATUS_W1TS</name>
              <description>GPIO0 ~ 31 interrupt status set register. If the value 1 is written to a bit here, the corresponding bit in GPIO_STATUS_INTERRUPT will be set to 1. Recommended operation: use this register to set GPIO_STATUS_INTERRUPT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS_W1TC</name>
          <description>GPIO0 ~ 31 interrupt status bit clear register</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>STATUS_W1TC</name>
              <description>GPIO0 ~ 31 interrupt status clear register. If the value 1 is written to a bit here, the corresponding bit in GPIO_STATUS_INTERRUPT will be cleared. Recommended operation: use this register to clear GPIO_STATUS_INTERRUPT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS1</name>
          <description>GPIO32 ~ 53 interrupt status register</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>INTERRUPT</name>
              <description>GPIO32 ~ 53 interrupt status register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS1_W1TS</name>
          <description>GPIO32 ~ 53 interrupt status bit set register</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>STATUS1_W1TS</name>
              <description>GPIO32 ~ 53 interrupt status set register. If the value 1 is written to a bit here, the corresponding bit in GPIO_STATUS1_REG will be set to 1. Recommended operation: use this register to set GPIO_STATUS1_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS1_W1TC</name>
          <description>GPIO32 ~ 53 interrupt status bit clear register</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>STATUS1_W1TC</name>
              <description>GPIO32 ~ 53 interrupt status clear register. If the value 1 is written to a bit here, the corresponding bit in GPIO_STATUS1_REG will be cleared. Recommended operation: use this register to clear GPIO_STATUS1_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCPU_INT</name>
          <description>GPIO0 ~ 31 PRO_CPU interrupt status register</description>
          <addressOffset>0x5c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PROCPU_INT</name>
              <description>GPIO0 ~ 31 PRO_CPU interrupt status. This interrupt status is corresponding to the bit in GPIO_STATUS_REG when assert (high) enable signal (bit13 of GPIO_PINn_REG).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCPU_NMI_INT</name>
          <description>GPIO0 ~ 31 PRO_CPU non-maskable interrupt status register</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PROCPU_NMI_INT</name>
              <description>GPIO0 ~ 31 PRO_CPU non-maskable interrupt status. This interrupt sta- tus is corresponding to the bit in GPIO_STATUS_REG when assert (high) enable signal (bit 14 of GPIO_PINn_REG).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPUSDIO_INT</name>
          <description>GPIO0 ~ 31 CPU SDIO interrupt status register</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SDIO_INT</name>
              <description>GPIO0~31 CPU SDIO interrupt status.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCPU_INT1</name>
          <description>GPIO32 ~ 53 PRO_CPU interrupt status register</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PROCPU1_INT</name>
              <description>GPIO32 ~ 53 PRO_CPU interrupt status. This interrupt status is corresponding to the bit in GPIO_STATUS1_REG when assert (high) enable signal (bit 13 of GPIO_PINn_REG).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCPU_NMI_INT1</name>
          <description>GPIO32 ~ 53 PRO_CPU non-maskable interrupt status register</description>
          <addressOffset>0x6c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PROCPU_NMI1_INT</name>
              <description>GPIO32 ~ 53 PRO_CPU non-maskable interrupt status. This interrupt status is corresponding to bit in GPIO_STATUS1_REG when assert (high) enable signal (bit 14 of GPIO_PINn_REG).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPUSDIO_INT1</name>
          <description>GPIO32 ~ 53 CPU SDIO interrupt status register</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SDIO1_INT</name>
              <description>GPIO32~53 CPU SDIO interrupt status.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>54</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>PIN%s</name>
          <description>Configuration for GPIO pin %s</description>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PIN0_SYNC2_BYPASS</name>
              <description>For the second stage synchronization, GPIO input data can be syn- chronized on either edge of the APB clock. 0: no synchronization; 1: synchronized on falling edge; 2 and 3: synchronized on rising edge.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PIN0_PAD_DRIVER</name>
              <description>Pad driver selection. 0: normal output; 1: open drain output..</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PIN0_SYNC1_BYPASS</name>
              <description>For the first stage synchronization, GPIO input data can be synchro- nized on either edge of the APB clock. 0: no synchronization; 1: synchronized on falling edge; 2 and 3: synchronized on rising edge.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PIN0_INT_TYPE</name>
              <description>Interrupt type selection. 0: GPIO interrupt disabled; 1: rising edge trigger; 2: falling edge trigger; 3: any edge trigger; 4: low level trigger; 5: high level trigger. (R/W)</description>
              <bitOffset>7</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PIN0_WAKEUP_ENABLE</name>
              <description>GPIO wake-up enable bit, only wakes up the CPU from Light-sleep.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PIN0_CONFIG</name>
              <description>Reserved</description>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PIN0_INT_ENA</name>
              <description>Interrupt enable bits. bit13: CPU interrupt enabled; bit14: CPU non-maskable interrupt enabled.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS_NEXT</name>
          <description>GPIO0 ~ 31 interrupt source register</description>
          <addressOffset>0x14c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>STATUS_INTERRUPT_NEXT</name>
              <description>Interrupt source signal of GPIO0 ~ 31, could be rising edge interrupt, falling edge interrupt, level sensitive interrupt and any edge interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS_NEXT1</name>
          <description>GPIO32 ~ 53 interrupt source register</description>
          <addressOffset>0x150</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>STATUS1_INTERRUPT_NEXT</name>
              <description>Interrupt source signal of GPIO32 ~ 53.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>256</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>FUNC%s_IN_SEL_CFG</name>
          <description>Peripheral function %s input selection register</description>
          <addressOffset>0x154</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>FUNC0_IN_SEL</name>
              <description>Selection control for peripheral input signal m, selects a pad from the 54 GPIO matrix pads to connect this input signal. Or selects 0x38 for a constantly high input or 0x3C for a constantly low input.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUNC0_IN_INV_SEL</name>
              <description>Invert the input value. 1: invert enabled; 0: invert disabled.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIG0_IN_SEL</name>
              <description>Bypass GPIO matrix. 1: route signals via GPIO matrix, 0: connect signals directly to peripheral configured in IO_MUX.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>54</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>FUNC%s_OUT_SEL_CFG</name>
          <description>Peripheral output selection for GPIO %s</description>
          <addressOffset>0x554</addressOffset>
          <size>32</size>
          <resetValue>0x100</resetValue>
          <fields>
            <field>
              <name>FUNC0_OUT_SEL</name>
              <description>Selection control for GPIO output n. If a value s (0&lt;=s&lt;256) is written to this field, the peripheral output signal s will be connected to GPIO output n. If a value 256 is written to this field, bit n of GPIO_OUT_REG/GPIO_OUT1_REG and GPIO_ENABLE_REG/GPIO_ENABLE1_REG will be selected as the output value and output enable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUNC0_OUT_INV_SEL</name>
              <description>0: Do not invert the output value; 1: Invert the output value.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUNC0_OEN_SEL</name>
              <description>0: Use output enable signal from peripheral; 1: Force the output enable signal to be sourced from bit n of GPIO_ENABLE_REG.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUNC0_OEN_INV_SEL</name>
              <description>0: Do not invert the output enable signal; 1: Invert the output enable signal.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_GATE</name>
          <description>GPIO clock gating register</description>
          <addressOffset>0x62c</addressOffset>
          <size>32</size>
          <resetValue>0x1</resetValue>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>Clock gating enable bit. If set to 1, the clock is free running.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DATE</name>
          <description>Version control register</description>
          <addressOffset>0x6fc</addressOffset>
          <size>32</size>
          <resetValue>0x1905061</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>Version control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>GPIO_SD</name>
      <description>Sigma-Delta Modulation</description>
      <groupName>GPIOSD</groupName>
      <baseAddress>0x3f404f00</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x2c</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>SIGMADELTA%s</name>
          <description>Duty Cycle Configure Register of SDM%s</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0xff00</resetValue>
          <fields>
            <field>
              <name>SD0_IN</name>
              <description>This field is used to configure the duty cycle of sigma delta modulation output.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SD0_PRESCALE</name>
              <description>This field is used to set a divider value to divide APB clock.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SIGMADELTA_CG</name>
          <description>Clock Gating Configure Register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>Clock enable bit of configuration registers for sigma delta modulation.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SIGMADELTA_MISC</name>
          <description>MISC Register</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>FUNCTION_CLK_EN</name>
              <description>Clock enable bit of sigma delta modulation.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SWAP</name>
              <description>Reserved.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SIGMADELTA_VERSION</name>
          <description>Version Control Register</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0x1802260</resetValue>
          <fields>
            <field>
              <name>GPIO_SD_DATE</name>
              <description>Version control register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>HMAC</name>
      <description>HMAC (Hash-based Message Authentication Code) Accelerator</description>
      <groupName>HMAC</groupName>
      <baseAddress>0x6003e000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x9c</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SET_START</name>
          <description>HMAC start control register.</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SET_START</name>
              <description>Set this bit to start hmac operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_PARA_PURPOSE</name>
          <description>HMAC parameter configuration register.</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PURPOSE_SET</name>
              <description>Set hmac purpose.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_PARA_KEY</name>
          <description>HMAC key configuration register.</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>KEY_SET</name>
              <description>Select hmac key.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_PARA_FINISH</name>
          <description>HMAC configuration completion register.</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SET_PARA_END</name>
              <description>Finish hmac configuration.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_MESSAGE_ONE</name>
          <description>HMAC one message control register.</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SET_TEXT_ONE</name>
              <description>Call SHA to calculate one message block.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_MESSAGE_ING</name>
          <description>HMAC message continue register.</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SET_TEXT_ING</name>
              <description>Set this bit, means there are still .message blocks to be processed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_MESSAGE_END</name>
          <description>HMAC message end register.</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SET_TEXT_END</name>
              <description>Set this bit to start hardware padding.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_RESULT_FINISH</name>
          <description>HMAC read result completion register.</description>
          <addressOffset>0x5c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SET_RESULT_END</name>
              <description>Set this bit to end upstream and clear the result.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_INVALIDATE_JTAG</name>
          <description>Invalidate JTAG result register.</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SET_INVALIDATE_JTAG</name>
              <description>Set this bit to clear hash result from hmac downstream JTAG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_INVALIDATE_DS</name>
          <description>Invalidate digital signature result register.</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SET_INVALIDATE_DS</name>
              <description>Set this bit to clear hash result from hmac downstream DS.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_ERROR</name>
          <description>The matching result between key and purpose user configured.</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>QUREY_CHECK</name>
              <description>Hmac error status.

0: hmac key and purpose match.

1: error.

</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_BUSY</name>
          <description>The busy state of HMAC module.</description>
          <addressOffset>0x6c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>BUSY_STATE</name>
              <description>The state of Hmac.

1'b0: idle.

1'b1: busy.

</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>WR_MESSAGE_%s</name>
          <description>Message register %s.</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>WDATA</name>
              <description>Store the %sth 32-bit of message.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>RD_RESULT_%s</name>
          <description>Hash result register %s.</description>
          <addressOffset>0xc0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RDATA</name>
              <description>Read the %sth 32-bit of hash result.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_MESSAGE_PAD</name>
          <description>Software padding register.</description>
          <addressOffset>0xf0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SET_TEXT_PAD</name>
              <description>Set this bit, means that software do padding job.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ONE_BLOCK</name>
          <description>One block message register.</description>
          <addressOffset>0xf4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SET_ONE_BLOCK</name>
              <description>Set this bit, means no padding is required.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version control register.</description>
          <addressOffset>0xf8</addressOffset>
          <size>32</size>
          <resetValue>0x20190402</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>Store hmac version information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>I2C0</name>
      <description>I2C (Inter-Integrated Circuit) Controller</description>
      <groupName>I2C</groupName>
      <baseAddress>0x3f413000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xa8</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>I2C_EXT0</name>
        <value>52</value>
      </interrupt>
      <registers>
        <register>
          <name>SCL_LOW_PERIOD</name>
          <description>Configures the low level width of the SCL clock</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SCL_LOW_PERIOD</name>
              <description>This register is used to configure for how long SCL remains low in master mode, in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTR</name>
          <description>Transmission setting</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0xa0b</resetValue>
          <fields>
            <field>
              <name>SDA_FORCE_OUT</name>
              <description>0: direct output;1: open drain output.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_FORCE_OUT</name>
              <description>0: direct output;1: open drain output.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMPLE_SCL_LEVEL</name>
              <description>This register is used to select the sample mode.

1: sample SDA data on the SCL low level.

0: sample SDA data on the SCL high level.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FULL_ACK_LEVEL</name>
              <description>This register is used to configure the ACK value that need to sent by master when the rx_fifo_cnt has reached the threshold.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MS_MODE</name>
              <description>Set this bit to configure the module as an I2C Master. Clear this bit to configure the

module as an I2C Slave.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_START</name>
              <description>Set this bit to start sending the data in TX FIFO.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_LSB_FIRST</name>
              <description>This bit is used to control the sending mode for data needing to be sent.

1: send data from the least significant bit;

0: send data from the most significant bit.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_LSB_FIRST</name>
              <description>This bit is used to control the storage mode for received data.

1: receive data from the least significant bit;

0: receive data from the most significant bit.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>Reserved</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARBITRATION_EN</name>
              <description>This is the enable bit for I2C bus arbitration function.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FSM_RST</name>
              <description>This register is used to reset the SCL_FSM.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REF_ALWAYS_ON</name>
              <description>This register is used to control the REF_TICK.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR</name>
          <description>Describe I2C work status</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RESP_REC</name>
              <description>The received ACK value in master mode or slave mode. 0: ACK;1: NACK.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_RW</name>
              <description>When in slave mode, 1: master reads from slave;0: master writes to slave.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIME_OUT</name>
              <description>When the I2C controller takes more than I2C_TIME_OUT clocks to receive a data bit,

this field changes to 1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARB_LOST</name>
              <description>When the I2C controller loses control of SCL line, this register changes to 1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUS_BUSY</name>
              <description>1: the I2C bus is busy transferring data;0: the I2C bus is in idle state.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_ADDRESSED</name>
              <description>When configured as an I2C Slave, and the address sent by the master is

equal to the address of the slave, then this bit will be of high level.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BYTE_TRANS</name>
              <description>This field changes to 1 when one byte is transferred.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_CNT</name>
              <description>This field represents the amount of data needed to be sent.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STRETCH_CAUSE</name>
              <description>The cause of stretching SCL low in slave mode. 0:  stretching SCL low at the beginning of I2C read data state. 1: stretching SCL low when I2C TX FIFO is empty in slave mode. 2: stretching SCL low when I2C RX FIFO is full in slave mode.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_CNT</name>
              <description>This field stores the amount of received data in RAM.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_MAIN_STATE_LAST</name>
              <description>This field indicates the states of the I2C module state machine.

0: Idle;1: Address shift;2: ACK address;3: RX data;4: TX data;5: Send ACK;6: Wait ACK</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_STATE_LAST</name>
              <description>This field indicates the states of the state machine used to produce SCL.

0: Idle;1: Start;2: Negative edge;3: Low;4: Positive edge;5: High;6: Stop</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TO</name>
          <description>Setting time out control for receiving data</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>TIME_OUT_VALUE</name>
              <description>This register is used to configure the timeout for receiving a data bit in APB

clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIME_OUT_EN</name>
              <description>This is the enable bit for time out control.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLAVE_ADDR</name>
          <description>Local slave address setting</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SLAVE_ADDR</name>
              <description>When configured as an I2C Slave, this field is used to configure the slave address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_10BIT_EN</name>
              <description>This field is used to enable the slave 10-bit addressing mode in master mode.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFO_ST</name>
          <description>FIFO status register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RXFIFO_START_ADDR</name>
              <description>This is the offset address of the last received data, as described in I2C_NONFIFO_RX_THRES.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_END_ADDR</name>
              <description>This is the offset address of the last received data, as described in I2C_NONFIFO_RX_THRES. This value refreshes when an I2C_RXFIFO_UDF_INT or I2C_TRANS_COMPLETE_INT interrupt is generated.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_START_ADDR</name>
              <description>This is the offset address of the first sent data, as described in I2C_NONFIFO_TX_THRES.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_END_ADDR</name>
              <description>This is the offset address of the last sent data, as described in  I2C_NONFIFO_TX_THRES.

The value refreshes when an I2C_TXFIFO_OVF_INT or I2C_TRANS_COMPLETE_INT interrupt is generated.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_UPDATE</name>
              <description>Write 0 or 1 to I2C_RX_UPDATE to update the value of I2C_RXFIFO_END_ADDR and I2C_RXFIFO_START_ADDR.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_UPDATE</name>
              <description>Write 0 or 1 to I2C_TX_UPDATE to update the value of I2C_TXFIFO_END_ADDR and I2C_TXFIFO_START_ADDR.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLAVE_RW_POINT</name>
              <description>The received data in I2C slave mode.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFO_CONF</name>
          <description>FIFO configuration register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x555408b</resetValue>
          <fields>
            <field>
              <name>RXFIFO_WM_THRHD</name>
              <description>The water mark threshold of RX FIFO in non-FIFO mode. When I2C_FIFO_PRT_EN is 1 and RX FIFO counter is bigger than I2C_RXFIFO_WM_THRHD[4:0], I2C_RXFIFO_WM_INT_RAW bit will be valid.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_WM_THRHD</name>
              <description>The water mark threshold of TX FIFO in non-FIFO mode. When I2C_FIFO_PRT_EN is 1 and TX FIFO counter is smaller than I2C_TXFIFO_WM_THRHD[4:0], I2C_TXFIFO_WM_INT_RAW bit will be valid.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NONFIFO_EN</name>
              <description>Set this bit to enable APB non-FIFO mode.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_ADDR_CFG_EN</name>
              <description>When this bit is set to 1, the byte received after the I2C address byte represents the offset address in the I2C Slave RAM.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FIFO_RST</name>
              <description>Set this bit to reset RX FIFO.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_FIFO_RST</name>
              <description>Set this bit to reset TX FIFO.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NONFIFO_RX_THRES</name>
              <description>When I2C receives more than I2C_NONFIFO_RX_THRES bytes of data, it will generate an I2C_RXFIFO_UDF_INT interrupt and update the current offset address of the received data.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NONFIFO_TX_THRES</name>
              <description>When I2C sends more than I2C_NONFIFO_TX_THRES bytes of data, it will generate

an I2C_TXFIFO_OVF_INT interrupt and update the current offset address of the sent data.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_PRT_EN</name>
              <description>The control enable bit of FIFO pointer in non-FIFO mode. This bit controls the valid bits and the interrupts of TX/RX FIFO overflow, underflow, full and empty.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA</name>
          <description>RX FIFO read data</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>FIFO_RDATA</name>
              <description>The value of RX FIFO read data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>Raw interrupt status</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RXFIFO_WM_INT_RAW</name>
              <description>The raw interrupt bit for I2C_RXFIFO_WM_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_WM_INT_RAW</name>
              <description>The raw interrupt bit for I2C_TXFIFO_WM_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_RAW</name>
              <description>The raw interrupt bit for I2C_RXFIFO_OVF_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>END_DETECT_INT_RAW</name>
              <description>The raw interrupt bit for the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BYTE_TRANS_DONE_INT_RAW</name>
              <description>The raw interrupt bit for the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_RAW</name>
              <description>The raw interrupt bit for the I2C_ARBITRATION_LOST_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MST_TXFIFO_UDF_INT_RAW</name>
              <description>The raw interrupt bit for I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_RAW</name>
              <description>The raw interrupt bit for the I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_RAW</name>
              <description>The raw interrupt bit for the I2C_TIME_OUT_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_START_INT_RAW</name>
              <description>The raw interrupt bit for the I2C_TRANS_START_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NACK_INT_RAW</name>
              <description>The raw interrupt bit for I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_OVF_INT_RAW</name>
              <description>The raw interrupt bit for I2C_TXFIFO_OVF_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_UDF_INT_RAW</name>
              <description>The raw interrupt bit for I2C_RXFIFO_UDF_INT  interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_ST_TO_INT_RAW</name>
              <description>The raw interrupt bit for I2C_SCL_ST_TO_INT interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_MAIN_ST_TO_INT_RAW</name>
              <description>The raw interrupt bit for I2C_SCL_MAIN_ST_TO_INT interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DET_START_INT_RAW</name>
              <description>The raw interrupt bit for I2C_DET_START_INT interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_STRETCH_INT_RAW</name>
              <description>The raw interrupt bit for I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>Interrupt clear bits</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RXFIFO_WM_INT_CLR</name>
              <description>Set this bit to clear I2C_RXFIFO_WM_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TXFIFO_WM_INT_CLR</name>
              <description>Set this bit to clear I2C_TXFIFO_WM_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_CLR</name>
              <description>Set this bit to clear I2C_RXFIFO_OVF_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>END_DETECT_INT_CLR</name>
              <description>Set this bit to clear the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BYTE_TRANS_DONE_INT_CLR</name>
              <description>Set this bit to clear the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_CLR</name>
              <description>Set this bit to clear the I2C_ARBITRATION_LOST_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MST_TXFIFO_UDF_INT_CLR</name>
              <description>Set this bit to clear I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_CLR</name>
              <description>Set this bit to clear the I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_CLR</name>
              <description>Set this bit to clear the I2C_TIME_OUT_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TRANS_START_INT_CLR</name>
              <description>Set this bit to clear the I2C_TRANS_START_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>NACK_INT_CLR</name>
              <description>Set this bit to clear I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TXFIFO_OVF_INT_CLR</name>
              <description>Set this bit to clear I2C_TXFIFO_OVF_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RXFIFO_UDF_INT_CLR</name>
              <description>Set this bit to clear I2C_RXFIFO_UDF_INT  interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SCL_ST_TO_INT_CLR</name>
              <description>Set this bit to clear I2C_SCL_ST_TO_INT interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SCL_MAIN_ST_TO_INT_CLR</name>
              <description>Set this bit to clear I2C_SCL_MAIN_ST_TO_INT interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DET_START_INT_CLR</name>
              <description>Set this bit to clear I2C_DET_START_INT interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLAVE_STRETCH_INT_CLR</name>
              <description>Set this bit to clear I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>Interrupt enable bits</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RXFIFO_WM_INT_ENA</name>
              <description>The raw interrupt bit for I2C_RXFIFO_WM_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_WM_INT_ENA</name>
              <description>The raw interrupt bit for I2C_TXFIFO_WM_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_ENA</name>
              <description>The raw interrupt bit for I2C_RXFIFO_OVF_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>END_DETECT_INT_ENA</name>
              <description>The raw interrupt bit for the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BYTE_TRANS_DONE_INT_ENA</name>
              <description>The raw interrupt bit for the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_ENA</name>
              <description>The raw interrupt bit for the I2C_ARBITRATION_LOST_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MST_TXFIFO_UDF_INT_ENA</name>
              <description>The raw interrupt bit for I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_ENA</name>
              <description>The raw interrupt bit for the I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIME_OUT_INT_ENA</name>
              <description>The raw interrupt bit for the I2C_TIME_OUT_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_START_INT_ENA</name>
              <description>The raw interrupt bit for the I2C_TRANS_START_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NACK_INT_ENA</name>
              <description>The raw interrupt bit for I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_OVF_INT_ENA</name>
              <description>The raw interrupt bit for I2C_TXFIFO_OVF_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_UDF_INT_ENA</name>
              <description>The raw interrupt bit for I2C_RXFIFO_UDF_INT  interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_ST_TO_INT_ENA</name>
              <description>The raw interrupt bit for I2C_SCL_ST_TO_INT interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_MAIN_ST_TO_INT_ENA</name>
              <description>The raw interrupt bit for I2C_SCL_MAIN_ST_TO_INT interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DET_START_INT_ENA</name>
              <description>The raw interrupt bit for I2C_DET_START_INT interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLAVE_STRETCH_INT_ENA</name>
              <description>The raw interrupt bit for I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_STATUS</name>
          <description>Status of captured I2C communication events</description>
          <addressOffset>0x2c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RXFIFO_WM_INT_ST</name>
              <description>The masked interrupt status bit for I2C_RXFIFO_WM_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_WM_INT_ST</name>
              <description>The masked interrupt status bit for I2C_TXFIFO_WM_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_ST</name>
              <description>The masked interrupt status bit for I2C_RXFIFO_OVF_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>END_DETECT_INT_ST</name>
              <description>The masked interrupt status bit for the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BYTE_TRANS_DONE_INT_ST</name>
              <description>The masked interrupt status bit for the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_ST</name>
              <description>The masked interrupt status bit for the I2C_ARBITRATION_LOST_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MST_TXFIFO_UDF_INT_ST</name>
              <description>The masked interrupt status bit for I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_ST</name>
              <description>The masked interrupt status bit for the I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_ST</name>
              <description>The masked interrupt status bit for the I2C_TIME_OUT_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_START_INT_ST</name>
              <description>The masked interrupt status bit for the I2C_TRANS_START_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NACK_INT_ST</name>
              <description>The masked interrupt status bit for I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_OVF_INT_ST</name>
              <description>The masked interrupt status bit for I2C_TXFIFO_OVF_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_UDF_INT_ST</name>
              <description>The masked interrupt status bit for I2C_RXFIFO_UDF_INT  interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_ST_TO_INT_ST</name>
              <description>The masked interrupt status bit for I2C_SCL_ST_TO_INT interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_MAIN_ST_TO_INT_ST</name>
              <description>The masked interrupt status bit for I2C_SCL_MAIN_ST_TO_INT interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DET_START_INT_ST</name>
              <description>The masked interrupt status bit for I2C_DET_START_INT interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_STRETCH_INT_ST</name>
              <description>The masked interrupt status bit for I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDA_HOLD</name>
          <description>Configures the hold time after a negative SCL edge</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>TIME</name>
              <description>This register is used to configure the interval between changing the SDA output level and the falling edge of SCL, in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDA_SAMPLE</name>
          <description>Configures the sample time after a positive SCL edge</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>TIME</name>
              <description>This register is used to configure the interval between the rising edge of SCL and the level sampling time of SDA, in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_HIGH_PERIOD</name>
          <description>Configures the high level width of the SCL clock</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SCL_HIGH_PERIOD</name>
              <description>This register is used to configure for how long SCL remains high in master mode, in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_WAIT_HIGH_PERIOD</name>
              <description>This register is used to configure for the SCL_FSM's waiting period for SCL to go high in master mode, in I2C module clock cycles.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_START_HOLD</name>
          <description>Configures the interval between pulling SDA low and pulling SCL low when the master generates a START condition</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <resetValue>0x8</resetValue>
          <fields>
            <field>
              <name>TIME</name>
              <description>This register is used to configure  interval between pulling SDA low and pulling SCL low when the master generates a START condition, in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_RSTART_SETUP</name>
          <description>Configures the interval between the positive; ;;;;;;;;
&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;edge of SCL and the negative edge of SDA</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <resetValue>0x8</resetValue>
          <fields>
            <field>
              <name>TIME</name>
              <description>This register is used to configure the interval between the positive

edge of SCL and the negative edge of SDA for a RESTART condition, in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_STOP_HOLD</name>
          <description>Configures the delay after the SCL clock; ;;;;;;;;
&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;edge for a stop condition</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>TIME</name>
              <description>This register is used to configure the delay after the STOP condition,

in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_STOP_SETUP</name>
          <description>Configures the delay between the SDA and; ;;;;;;;;
&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;SCL positive edge for a stop condition</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>TIME</name>
              <description>This register is used to configure the time between the positive edge

of SCL and the positive edge of SDA, in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_FILTER_CFG</name>
          <description>SCL filter configuration register</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>SCL_FILTER_THRES</name>
              <description>When a pulse on the SCL input has smaller width than this register value

in I2C module clock cycles, the I2C controller will ignore that pulse.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_FILTER_EN</name>
              <description>This is the filter enable bit for SCL.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDA_FILTER_CFG</name>
          <description>SDA filter configuration register</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>SDA_FILTER_THRES</name>
              <description>When a pulse on the SDA input has smaller width than this register value

in I2C module clock cycles, the I2C controller will ignore that pulse.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_FILTER_EN</name>
              <description>This is the filter enable bit for SDA.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD0</name>
          <description>I2C command register 0</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND0</name>
              <description>This is the content of command 0. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND0_DONE</name>
              <description>When command 0 is done in I2C Master mode, this bit changes to high

level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD1</name>
          <description>I2C command register 1</description>
          <addressOffset>0x5c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND1</name>
              <description>This is the content of command 1. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND1_DONE</name>
              <description>When command 1 is done in I2C Master mode, this bit changes to high

level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD2</name>
          <description>I2C command register 2</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND2</name>
              <description>This is the content of command 2. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND2_DONE</name>
              <description>When command 2 is done in I2C Master mode, this bit changes to high

Level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD3</name>
          <description>I2C command register 3</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND3</name>
              <description>This is the content of command 3. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND3_DONE</name>
              <description>When command 3 is done in I2C Master mode, this bit changes to high

level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD4</name>
          <description>I2C command register 4</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND4</name>
              <description>This is the content of command 4. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND4_DONE</name>
              <description>When command 4 is done in I2C Master mode, this bit changes to high

level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD5</name>
          <description>I2C command register 5</description>
          <addressOffset>0x6c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND5</name>
              <description>This is the content of command 5. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND5_DONE</name>
              <description>When command 5 is done in I2C Master mode, this bit changes to high level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD6</name>
          <description>I2C command register 6</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND6</name>
              <description>This is the content of command 6. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND6_DONE</name>
              <description>When command 6 is done in I2C Master mode, this bit changes to high level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD7</name>
          <description>I2C command register 7</description>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND7</name>
              <description>This is the content of command 7. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND7_DONE</name>
              <description>When command 7 is done in I2C Master mode, this bit changes to high level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD8</name>
          <description>I2C command register 8</description>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND8</name>
              <description>This is the content of command 8. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND8_DONE</name>
              <description>When command 8 is done in I2C Master mode, this bit changes to high level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD9</name>
          <description>I2C command register 9</description>
          <addressOffset>0x7c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND9</name>
              <description>This is the content of command 9. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND9_DONE</name>
              <description>When command 9 is done in I2C Master mode, this bit changes to high level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD10</name>
          <description>I2C command register 10</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND10</name>
              <description>This is the content of command 10. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND10_DONE</name>
              <description>When command 10 is done in I2C Master mode, this bit changes to high level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD11</name>
          <description>I2C command register 11</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND11</name>
              <description>This is the content of command 11. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND11_DONE</name>
              <description>When command 11 is done in I2C Master mode, this bit changes to high level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD12</name>
          <description>I2C command register 12</description>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND12</name>
              <description>This is the content of command 12. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND12_DONE</name>
              <description>When command 12 is done in I2C Master mode, this bit changes to high level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD13</name>
          <description>I2C command register 13</description>
          <addressOffset>0x8c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND13</name>
              <description>This is the content of command 13. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND13_DONE</name>
              <description>When command 13 is done in I2C Master mode, this bit changes to high level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD14</name>
          <description>I2C command register 14</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND14</name>
              <description>This is the content of command 14. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND14_DONE</name>
              <description>When command 14 is done in I2C Master mode, this bit changes to high level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMD15</name>
          <description>I2C command register 15</description>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>COMMAND15</name>
              <description>This is the content of command 15. It consists of three parts:

op_code is the command, 0: RSTART;1: WRITE;2: READ;3: STOP;4: END.

byte_num represents the number of bytes that need to be sent or received.

ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more

Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND15_DONE</name>
              <description>When command 15 is done in I2C Master mode, this bit changes to high level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_ST_TIME_OUT</name>
          <description>SCL status time out register</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <resetValue>0x100</resetValue>
          <fields>
            <field>
              <name>SCL_ST_TO</name>
              <description>The threshold value of SCL_FSM state unchanged period.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_MAIN_ST_TIME_OUT</name>
          <description>SCL main status time out register</description>
          <addressOffset>0x9c</addressOffset>
          <size>32</size>
          <resetValue>0x100</resetValue>
          <fields>
            <field>
              <name>SCL_MAIN_ST_TO</name>
              <description>The threshold value of SCL_MAIN_FSM state unchanged period.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_SP_CONF</name>
          <description>Power configuration register</description>
          <addressOffset>0xa0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SCL_RST_SLV_EN</name>
              <description>When I2C master is IDLE, set this bit to send out SCL pulses. The number of pulses equals to I2C_SCL_RST_SLV_NUM[4:0].</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_RST_SLV_NUM</name>
              <description>Configure the pulses of SCL generated in I2C master mode. Valid when I2C_SCL_RST_SLV_EN is 1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_PD_EN</name>
              <description>The power down enable bit for the I2C output SCL line. 1: Power down. 0: Not power down. Set I2C_SCL_FORCE_OUT and I2C_SCL_PD_EN to 1 to stretch SCL low.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_PD_EN</name>
              <description>The power down enable bit for the I2C output SDA line. 1: Power down. 0: Not power down. Set I2C_SDA_FORCE_OUT and I2C_SDA_PD_EN to 1 to stretch SDA low.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_STRETCH_CONF</name>
          <description>Set SCL stretch of I2C slave</description>
          <addressOffset>0xa4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>STRETCH_PROTECT_NUM</name>
              <description>Configure the period of I2C slave stretching SCL line.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLAVE_SCL_STRETCH_EN</name>
              <description>The enable bit for slave SCL stretch function. 1: Enable. 0: Disable. The SCL output line will be stretched low when I2C_SLAVE_SCL_STRETCH_EN is 1 and stretch event happens. The stretch cause can be seen in I2C_STRETCH_CAUSE.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLAVE_SCL_STRETCH_CLR</name>
              <description>Set this bit to clear the I2C slave SCL stretch function.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version control register</description>
          <addressOffset>0xf8</addressOffset>
          <size>32</size>
          <resetValue>0x19052000</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>This is the the version control register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="I2C0">
      <name>I2C1</name>
      <baseAddress>0x3f427000</baseAddress>
      <description>I2C (Inter-Integrated Circuit) Controller</description>
      <interrupt>
        <name>I2C_EXT1</name>
        <value>53</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>I2S</name>
      <description>I2S (Inter-IC Sound) Controller</description>
      <groupName>I2S</groupName>
      <baseAddress>0x3f40f000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x88</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>I2S0</name>
        <value>35</value>
      </interrupt>
      <interrupt>
        <name>I2S1</name>
        <value>36</value>
      </interrupt>
      <registers>
        <register>
          <name>CONF</name>
          <description>I2S Configure register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0xc0300</resetValue>
          <fields>
            <field>
              <name>TX_RESET</name>
              <description>Set this bit to reset transmitter</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_RESET</name>
              <description>Set this bit to reset receiver</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_FIFO_RESET</name>
              <description>Set this bit to reset txFIFO</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_FIFO_RESET</name>
              <description>Set this bit to reset rxFIFO</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_START</name>
              <description>Set this bit to start transmitting data</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_START</name>
              <description>Set this bit to start receiving data</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SLAVE_MOD</name>
              <description>Set this bit to enable slave transmitter mode</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_SLAVE_MOD</name>
              <description>Set this bit to enable slave receiver mode</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_RIGHT_FIRST</name>
              <description>Set this bit to transmit right channel data first</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_RIGHT_FIRST</name>
              <description>Set this bit to receive right channel data first</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MSB_SHIFT</name>
              <description>Set this bit to enable transmitter in Phillips standard mode</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSB_SHIFT</name>
              <description>Set this bit to enable receiver in Phillips standard mode</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SHORT_SYNC</name>
              <description>Set this bit to enable transmitter in PCM standard mode</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_SHORT_SYNC</name>
              <description>Set this bit to enable receiver in PCM standard mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MONO</name>
              <description>Set this bit to enable transmitter in mono mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MONO</name>
              <description>Set this bit to enable receiver  in mono mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MSB_RIGHT</name>
              <description>Set this bit to place right channel data at the MSB in the transmit FIFO.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSB_RIGHT</name>
              <description>Set this bit to place right channel data at the MSB in the receive FIFO.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_LSB_FIRST_DMA</name>
              <description>1:the data in DMA/APB transform from low bits. 0:the data from DMA/APB transform from high bits.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_LSB_FIRST_DMA</name>
              <description>1:the data in DMA/APB transform from low bits. 0:the data from DMA/APB transform from high bits.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIG_LOOPBACK</name>
              <description>Enable signal loopback mode with transmitter module and receiver module sharing the same WS and BCK signals.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_FIFO_RESET_ST</name>
              <description>1:i2s_tx_fifo reset is not ok   0:i2s_tx_fifo_reset is ok</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_FIFO_RESET_ST</name>
              <description>1:i2s_rx_fifo_reset is not ok   0:i2s_rx_fifo reset is ok</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_RESET_ST</name>
              <description>1: i2s_tx_reset is not ok   0: i2s_tx_reset is ok</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_DMA_EQUAL</name>
              <description>1:data in left channel is equal to data in right channel</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_DMA_EQUAL</name>
              <description>1:data in left channel is equal to data in right channel</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRE_REQ_EN</name>
              <description>set this bit to enable i2s to prepare data earlier</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BIG_ENDIAN</name>
              <description>I2S TX byte endian.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BIG_ENDIAN</name>
              <description>I2S RX byte endian.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_RESET_ST</name>
              <description>I2S RX reset status. 1: I2S_RX_RESET is not finished. 0: I2S_RX_RESET is finished.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>Raw interrupt status</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RX_TAKE_DATA_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_rx_take_data_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_PUT_DATA_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_tx_put_data_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_WFULL_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_rx_wfull_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_REMPTY_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_rx_rempty_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_WFULL_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_tx_wfull_int interrupt</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_REMPTY_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_tx_rempty_int interrupt</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_HUNG_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_rx_hung_int interrupt</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_HUNG_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_tx_hung_int interrupt</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DONE_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_in_done_int interrupt</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_in_suc_eof_int interrupt</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF_INT_RAW</name>
              <description>don't use</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DONE_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_out_done_int interrupt</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EOF_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_out_eof_int interrupt</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_in_dscr_err_int interrupt</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_out_dscr_err_int interrupt</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_in_dscr_empty_int interrupt</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_out_total_eof_int interrupt</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>V_SYNC_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_v_sync_int interrupt</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>Masked interrupt status</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RX_TAKE_DATA_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_rx_take_data_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_PUT_DATA_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_tx_put_data_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_WFULL_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_rx_wfull_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_REMPTY_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_rx_rempty_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_WFULL_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_tx_wfull_int interrupt</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_REMPTY_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_tx_rempty_int interrupt</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_HUNG_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_rx_hung_int interrupt</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_HUNG_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_tx_hung_int interrupt</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DONE_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_in_done_int interrupt</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_in_suc_eof_int interrupt</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF_INT_ST</name>
              <description>don't use</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DONE_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_out_done_int interrupt</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EOF_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_out_eof_int interrupt</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_in_dscr_err_int interrupt</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_out_dscr_err_int interrupt</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_in_dscr_empty_int interrupt</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_out_total_eof_int interrupt</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>V_SYNC_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_v_sync_int  interrupt</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>Interrupt enable bits</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>RX_TAKE_DATA_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_rx_take_data_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PUT_DATA_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_tx_put_data_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_WFULL_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_rx_wfull_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_REMPTY_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_rx_rempty_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_WFULL_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_tx_wfull_int interrupt</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_REMPTY_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_tx_rempty_int interrupt</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_HUNG_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_rx_hung_int interrupt</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_HUNG_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_tx_hung_int interrupt</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DONE_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_in_done_int interrupt</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_SUC_EOF_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_in_suc_eof_int interrupt</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_ERR_EOF_INT_ENA</name>
              <description>don't use</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_DONE_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_out_done_int interrupt</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EOF_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_out_eof_int interrupt</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DSCR_ERR_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_in_dscr_err_int interrupt</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_out_dscr_err_int interrupt</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_in_dscr_empty_int interrupt</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_out_total_eof_int interrupt</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>V_SYNC_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_v_sync_int interrupt</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>Interrupt clear bits</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>TAKE_DATA_INT_CLR</name>
              <description>Set this bit to clear the i2s_rx_take_data_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PUT_DATA_INT_CLR</name>
              <description>Set this bit to clear the i2s_tx_put_data_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_WFULL_INT_CLR</name>
              <description>Set this bit to clear the i2s_rx_wfull_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_REMPTY_INT_CLR</name>
              <description>Set this bit to clear the i2s_rx_rempty_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_WFULL_INT_CLR</name>
              <description>Set this bit to clear the i2s_tx_wfull_int interrupt</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_REMPTY_INT_CLR</name>
              <description>Set this bit to clear the i2s_tx_rempty_int interrupt</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_HUNG_INT_CLR</name>
              <description>Set this bit to clear the i2s_rx_hung_int interrupt</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_HUNG_INT_CLR</name>
              <description>Set this bit to clear the i2s_tx_hung_int interrupt</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_DONE_INT_CLR</name>
              <description>Set this bit to clear the i2s_in_done_int interrupt</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF_INT_CLR</name>
              <description>Set this bit to clear the i2s_in_suc_eof_int interrupt</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF_INT_CLR</name>
              <description>don't use</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_DONE_INT_CLR</name>
              <description>Set this bit to clear the i2s_out_done_int interrupt</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_EOF_INT_CLR</name>
              <description>Set this bit to clear the i2s_out_eof_int interrupt</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR_INT_CLR</name>
              <description>Set this bit to clear the i2s_in_dscr_err_int interrupt</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR_INT_CLR</name>
              <description>Set this bit to clear the i2s_out_dscr_err_int interrupt</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY_INT_CLR</name>
              <description>Set this bit to clear the i2s_in_dscr_empty_int interrupt</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF_INT_CLR</name>
              <description>Set this bit to clear the i2s_out_total_eof_int interrupt</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>V_SYNC_INT_CLR</name>
              <description>Set this bit to clear the  i2s_v_sync_int interrupt</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMING</name>
          <description>I2S timing register</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>TX_BCK_IN_DELAY</name>
              <description>Number of delay cycles for BCK into the transmitter</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_WS_IN_DELAY</name>
              <description>Number of delay cycles for WS into the transmitter</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BCK_IN_DELAY</name>
              <description>Number of delay cycles for BCK into the receiver</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_WS_IN_DELAY</name>
              <description>Number of delay cycles for WS into the receiver</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_SD_IN_DELAY</name>
              <description>Number of delay cycles for SD into the receiver</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BCK_OUT_DELAY</name>
              <description>Number of delay cycles for BCK out of the transmitter</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_WS_OUT_DELAY</name>
              <description>Number of delay cycles for WS out of the transmitter</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SD_OUT_DELAY</name>
              <description>Number of delay cycles for SD out of the transmitter</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_WS_OUT_DELAY</name>
              <description>Number of delay cycles for WS out of the receiver</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BCK_OUT_DELAY</name>
              <description>Number of delay cycles for BCK out of the receiver</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_DSYNC_SW</name>
              <description>Set this bit to synchronize signals with the double sync method into the transmitter</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_DSYNC_SW</name>
              <description>Set this bit to synchronize signals with the double sync method into the receiver</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATA_ENABLE_DELAY</name>
              <description>Number of delay cycles for data valid flag.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BCK_IN_INV</name>
              <description>Set this bit to invert BCK signal input to the slave transmitter</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFO_CONF</name>
          <description>I2S FIFO configure register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x1820</resetValue>
          <fields>
            <field>
              <name>RX_DATA_NUM</name>
              <description>Threshold of data length in receiver FIFO</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_DATA_NUM</name>
              <description>Threshold of data length in transmitter FIFO</description>
              <bitOffset>6</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCR_EN</name>
              <description>Set this bit to enable I2S DMA mode</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_FIFO_MOD</name>
              <description>Transmitter FIFO mode configuration bits</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FIFO_MOD</name>
              <description>Receiver FIFO mode configuration bits</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_FIFO_MOD_FORCE_EN</name>
              <description>The bit should always be set to 1</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FIFO_MOD_FORCE_EN</name>
              <description>The bit should always be set to 1</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FIFO_SYNC</name>
              <description>force write back rx data to memory</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_24MSB_EN</name>
              <description>Only useful in rx 24bit mode. 1: the high 24 bits are effective in i2s fifo   0: the low 24 bits are effective in i2s fifo</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_24MSB_EN</name>
              <description>Only useful in tx 24bit mode. 1: the high 24 bits are effective in i2s fifo   0: the low 24 bits are effective in i2s fifo</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXEOF_NUM</name>
          <description>I2S DMA RX EOF data length</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x40</resetValue>
          <fields>
            <field>
              <name>RX_EOF_NUM</name>
              <description>the length of data to be received. It will trigger i2s_in_suc_eof_int.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF_SIGLE_DATA</name>
          <description>Constant single channel data</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>SIGLE_DATA</name>
              <description>the right channel or left channel put out constant value stored in this register according to tx_chan_mod and reg_tx_msb_right</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF_CHAN</name>
          <description>I2S channel configure register</description>
          <addressOffset>0x2c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>TX_CHAN_MOD</name>
              <description>I2S transmitter channel mode configuration bits.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CHAN_MOD</name>
              <description>I2S receiver channel mode configuration bits.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_LINK</name>
          <description>I2S DMA TX configure register</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OUTLINK_ADDR</name>
              <description>The address of first outlink descriptor</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_STOP</name>
              <description>Set this bit to stop outlink descriptor</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_START</name>
              <description>Set this bit to start outlink descriptor</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_RESTART</name>
              <description>Set this bit to restart outlink descriptor</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_PARK</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_LINK</name>
          <description>I2S DMA RX configure register</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>INLINK_ADDR</name>
              <description>The address of first inlink descriptor</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_STOP</name>
              <description>Set this bit to stop inlink descriptor</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_START</name>
              <description>Set this bit to start inlink descriptor</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_RESTART</name>
              <description>Set this bit to restart inlink descriptor</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_PARK</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_EOF_DES_ADDR</name>
          <description>The address of outlink descriptor that produces EOF</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OUT_EOF_DES_ADDR</name>
              <description>The address of outlink descriptor that produces EOF</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_EOF_DES_ADDR</name>
          <description>The address of inlink descriptor that produces EOF</description>
          <addressOffset>0x3c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>IN_SUC_EOF_DES_ADDR</name>
              <description>The address of inlink descriptor that produces EOF</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_EOF_BFR_DES_ADDR</name>
          <description>The address of buffer relative to the outlink descriptor that produces EOF</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OUT_EOF_BFR_DES_ADDR</name>
              <description>The address of buffer relative to the outlink descriptor that produces EOF</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INLINK_DSCR</name>
          <description>The address of current inlink descriptor</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>INLINK_DSCR</name>
              <description>The address of current inlink descriptor</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INLINK_DSCR_BF0</name>
          <description>The address of next inlink descriptor</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>INLINK_DSCR_BF0</name>
              <description>The address of next inlink descriptor</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INLINK_DSCR_BF1</name>
          <description>The address of next inlink data buffer</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>INLINK_DSCR_BF1</name>
              <description>The address of next inlink data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUTLINK_DSCR</name>
          <description>The address of current outlink descriptor</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR</name>
              <description>The address of current outlink descriptor</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUTLINK_DSCR_BF0</name>
          <description>The address of next outlink descriptor</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_BF0</name>
              <description>The address of next outlink descriptor</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUTLINK_DSCR_BF1</name>
          <description>The address of next outlink data buffer</description>
          <addressOffset>0x5c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_BF1</name>
              <description>The address of next outlink data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LC_CONF</name>
          <description>I2S DMA configuration register</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <resetValue>0x100</resetValue>
          <fields>
            <field>
              <name>IN_RST</name>
              <description>Set this bit to reset in dma FSM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_RST</name>
              <description>Set this bit to reset out dma FSM</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHBM_FIFO_RST</name>
              <description>Set this bit to reset ahb interface cmdFIFO of DMA</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHBM_RST</name>
              <description>Set this bit to reset ahb interface of DMA</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_LOOP_TEST</name>
              <description>Set this bit to loop test inlink</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_LOOP_TEST</name>
              <description>Set this bit to loop test outlink</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_AUTO_WRBACK</name>
              <description>Set this bit to enable outlink-written-back automatically when out buffer is transmitted done.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_NO_RESTART_CLR</name>
              <description>don't use</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EOF_MODE</name>
              <description>DMA out EOF flag generation mode . 1: when dma has popped all data from the FIFO  0:when ahb has pushed all data to the FIFO</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTDSCR_BURST_EN</name>
              <description>DMA outlink descriptor transfer mode configuration bit. 1:  to prepare outlink descriptor with burst mode    0: to prepare outlink descriptor with byte mode</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDSCR_BURST_EN</name>
              <description>DMA inlink descriptor transfer mode configuration bit. 1:  to prepare inlink descriptor with burst mode    0: to prepare inlink descriptor with byte mode</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_DATA_BURST_EN</name>
              <description>Transmitter data transfer mode configuration bit. 1:  to prepare out data with burst mode      0: to prepare out data with byte mode</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHECK_OWNER</name>
              <description>Set this bit to enable check owner bit by hardware</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_TRANS_EN</name>
              <description>don't use</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_MEM_BK_SIZE</name>
              <description>DMA access external memory block size. 0: 16 bytes      1: 32 bytes    2:64 bytes      3:reserved</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUTFIFO_PUSH</name>
          <description>APB out FIFO mode register</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OUTFIFO_WDATA</name>
              <description>APB out FIFO write data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_PUSH</name>
              <description>APB out FIFO  push.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INFIFO_POP</name>
          <description>APB in FIFO mode register</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>INFIFO_RDATA</name>
              <description>APB in FIFO  read data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_POP</name>
              <description>APB in FIFO  pop.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LC_STATE0</name>
          <description>I2S DMA TX status</description>
          <addressOffset>0x6c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_ADDR</name>
              <description>I2S DMA out descriptor address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_STATE</name>
              <description>I2S DMA out descriptor state.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_STATE</name>
              <description>I2S DMA out data state.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_CNT</name>
              <description>The remains of I2S DMA outfifo data.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_FULL</name>
              <description>I2S DMA outfifo is full.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EMPTY</name>
              <description>I2S DMA outfifo is empty.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LC_STATE1</name>
          <description>I2S DMA RX status</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>INLINK_DSCR_ADDR</name>
              <description>I2S DMA in descriptor address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_STATE</name>
              <description>I2S DMA in descriptor state.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_STATE</name>
              <description>I2S DMA in data state.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_CNT_DEBUG</name>
              <description>The remains of I2S DMA infifo data.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_FULL</name>
              <description>I2S DMA infifo is full.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_EMPTY</name>
              <description>I2S DMA infifo is empty.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LC_HUNG_CONF</name>
          <description>I2S Hung configure register</description>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <resetValue>0x810</resetValue>
          <fields>
            <field>
              <name>LC_FIFO_TIMEOUT</name>
              <description>the i2s_tx_hung_int interrupt or the i2s_rx_hung_int interrupt will be triggered when fifo hung counter is equal to this value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LC_FIFO_TIMEOUT_SHIFT</name>
              <description>The bits are used to scale tick counter threshold. The tick counter is reset when counter value &gt;= 88000/2^i2s_lc_fifo_timeout_shift</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LC_FIFO_TIMEOUT_ENA</name>
              <description>The enable bit for FIFO timeout</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF1</name>
          <description>I2S configure1 register</description>
          <addressOffset>0xa0</addressOffset>
          <size>32</size>
          <resetValue>0x89</resetValue>
          <fields>
            <field>
              <name>TX_PCM_CONF</name>
              <description>Compress/Decompress module configuration bits. 0: decompress transmitted data  1:compress transmitted data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PCM_BYPASS</name>
              <description>Set this bit to bypass  Compress/Decompress module for transmitted data.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_PCM_CONF</name>
              <description>Compress/Decompress module configuration bits. 0: decompress received data  1:compress received data</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_PCM_BYPASS</name>
              <description>Set this bit to bypass Compress/Decompress module for received data.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_STOP_EN</name>
              <description>Set this bit to stop disable output BCK signal and WS signal when tx FIFO is emtpy</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_ZEROS_RM_EN</name>
              <description>don't use</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CONF</name>
          <description>I2S power down configure register</description>
          <addressOffset>0xa4</addressOffset>
          <size>32</size>
          <resetValue>0x2a</resetValue>
          <fields>
            <field>
              <name>FIFO_FORCE_PD</name>
              <description>Force FIFO power-down</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_FORCE_PU</name>
              <description>Force FIFO power-up</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLC_MEM_FORCE_PD</name>
              <description>Force I2S memory power-down</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLC_MEM_FORCE_PU</name>
              <description>Force I2S memory power-up</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_RAM_FORCE_PD</name>
              <description>Force DMA FIFO power-down</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_RAM_FORCE_PU</name>
              <description>Force DMA FIFO power-up</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_RAM_CLK_FO</name>
              <description>Set this bit to force on the DMA ram clock.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF2</name>
          <description>I2S configure2 register</description>
          <addressOffset>0xa8</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>CAMERA_EN</name>
              <description>Set this bit to enable camera mode</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_TX_WRX2_EN</name>
              <description>LCD WR double for one datum.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_TX_SDX2_EN</name>
              <description>Set this bit to duplicate data pairs (Frame Form 2) in LCD mode.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATA_ENABLE_TEST_EN</name>
              <description>for debug camera mode enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATA_ENABLE</name>
              <description>for debug camera mode enable</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_EN</name>
              <description>Set this bit to enable LCD mode</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_ADC_START_EN</name>
              <description>Set this bit to enable the function that ADC mode is triggered by external signal.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_VALID_EN</name>
              <description>Set this bit to enable camera internal valid</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_SYNC_FIFO_RESET</name>
              <description>Set this bit to reset cam_sync_fifo</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_CLK_LOOPBACK</name>
              <description>Set this bit to loopback cam_clk from i2s_rx</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VSYNC_FILTER_EN</name>
              <description>Set this bit to enable I2S VSYNC filter function.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VSYNC_FILTER_THRES</name>
              <description>Configure the I2S VSYNC filter threshold value</description>
              <bitOffset>11</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLKM_CONF</name>
          <description>I2S module clock configure register</description>
          <addressOffset>0xac</addressOffset>
          <size>32</size>
          <resetValue>0x4</resetValue>
          <fields>
            <field>
              <name>CLKM_DIV_NUM</name>
              <description>Integral I2S clock divider value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKM_DIV_B</name>
              <description>Fractional clock divider numerator value</description>
              <bitOffset>8</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKM_DIV_A</name>
              <description>Fractional clock divider denominator value</description>
              <bitOffset>14</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>Set this bit to enable clk gate</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_SEL</name>
              <description>Set this bit to select I2S module clock source. 0: No clock. 1: APLL_CLK. 2: PLL_160M_CLK. 3: No clock.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAMPLE_RATE_CONF</name>
          <description>I2S sample rate register</description>
          <addressOffset>0xb0</addressOffset>
          <size>32</size>
          <resetValue>0x410186</resetValue>
          <fields>
            <field>
              <name>TX_BCK_DIV_NUM</name>
              <description>Bit clock configuration bits in transmitter mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BCK_DIV_NUM</name>
              <description>Bit clock configuration bits in receiver mode.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BITS_MOD</name>
              <description>Set the bits to configure bit length of I2S transmitter channel.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BITS_MOD</name>
              <description>Set the bits to configure bit length of I2S receiver channel.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATE</name>
          <description>I2S TX status register</description>
          <addressOffset>0xbc</addressOffset>
          <size>32</size>
          <resetValue>0x1</resetValue>
          <fields>
            <field>
              <name>TX_IDLE</name>
              <description>1: I2S TX is in idle state. 0: I2S TX is at work.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version control register</description>
          <addressOffset>0xfc</addressOffset>
          <size>32</size>
          <resetValue>0x19052500</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>Version control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>INTERRUPT</name>
      <description>Interrupt</description>
      <groupName>INTERRUPT</groupName>
      <baseAddress>0x3f4c2000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x190</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>PRO_MAC_INTR_MAP</name>
          <description>MAC_INTR interrupt configuration register</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_MAC_INTR_MAP</name>
              <description>This register is used to map MAC_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_MAC_NMI_MAP</name>
          <description>MAC_NMI interrupt configuration register</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_MAC_NMI_MAP</name>
              <description>This register is used to map MAC_NMI interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_PWR_INTR_MAP</name>
          <description>PWR_INTR interrupt configuration register</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_PWR_INTR_MAP</name>
              <description>This register is used to map PWR_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_BB_INT_MAP</name>
          <description>BB_INT interrupt configuration register</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_BB_INT_MAP</name>
              <description>This register is used to map BB_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_BT_MAC_INT_MAP</name>
          <description>BT_MAC_INT interrupt configuration register</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_BT_MAC_INT_MAP</name>
              <description>This register is used to map BT_MAC_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_BT_BB_INT_MAP</name>
          <description>BT_BB_INT interrupt configuration register</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_BT_BB_INT_MAP</name>
              <description>This register is used to map BT_BB_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_BT_BB_NMI_MAP</name>
          <description>BT_BB_NMI interrupt configuration register</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_BT_BB_NMI_MAP</name>
              <description>This register is used to map BT_BB_NMI interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_RWBT_IRQ_MAP</name>
          <description>RWBT_IRQ interrupt configuration register</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_RWBT_IRQ_MAP</name>
              <description>This register is used to map RWBT_IRQ interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_RWBLE_IRQ_MAP</name>
          <description>RWBLE_IRQ interrupt configuration register</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_RWBLE_IRQ_MAP</name>
              <description>This register is used to map RWBLE_IRQ interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_RWBT_NMI_MAP</name>
          <description>RWBT_NMI interrupt configuration register</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_RWBT_NMI_MAP</name>
              <description>This register is used to map RWBT_NMI interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_RWBLE_NMI_MAP</name>
          <description>RWBLE_NMI interrupt configuration register</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_RWBLE_NMI_MAP</name>
              <description>This register is used to map RWBLE_NMI interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SLC0_INTR_MAP</name>
          <description>SLC0_INTR interrupt configuration register</description>
          <addressOffset>0x2c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SLC0_INTR_MAP</name>
              <description>This register is used to map SLC0_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SLC1_INTR_MAP</name>
          <description>SLC1_INTR interrupt configuration register</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SLC1_INTR_MAP</name>
              <description>This register is used to map SLC1_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_UHCI0_INTR_MAP</name>
          <description>UHCI0_INTR interrupt configuration register</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_UHCI0_INTR_MAP</name>
              <description>This register is used to map UHCI0_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_UHCI1_INTR_MAP</name>
          <description>UHCI1_INTR interrupt configuration register</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_UHCI1_INTR_MAP</name>
              <description>This register is used to map UHCI1_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG_T0_LEVEL_INT_MAP</name>
          <description>TG_T0_LEVEL_INT interrupt configuration register</description>
          <addressOffset>0x3c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG_T0_LEVEL_INT_MAP</name>
              <description>This register is used to map TG_T0_LEVEL_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG_T1_LEVEL_INT_MAP</name>
          <description>TG_T1_LEVEL_INT interrupt configuration register</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG_T1_LEVEL_INT_MAP</name>
              <description>This register is used to map TG_T1_LEVEL_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG_WDT_LEVEL_INT_MAP</name>
          <description>TG_WDT_LEVEL_INT interrupt configuration register</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG_WDT_LEVEL_INT_MAP</name>
              <description>This register is used to map TG_WDT_LEVEL_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG_LACT_LEVEL_INT_MAP</name>
          <description>TG_LACT_LEVEL_INT interrupt configuration register</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG_LACT_LEVEL_INT_MAP</name>
              <description>This register is used to map TG_LACT_LEVEL_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG1_T0_LEVEL_INT_MAP</name>
          <description>TG1_T0_LEVEL_INT interrupt configuration register</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG1_T0_LEVEL_INT_MAP</name>
              <description>This register is used to map TG1_T0_LEVEL_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG1_T1_LEVEL_INT_MAP</name>
          <description>TG1_T1_LEVEL_INT interrupt configuration register</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG1_T1_LEVEL_INT_MAP</name>
              <description>This register is used to map TG1_T1_LEVEL_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG1_WDT_LEVEL_INT_MAP</name>
          <description>TG1_WDT_LEVEL_INT interrupt configuration register</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG1_WDT_LEVEL_INT_MAP</name>
              <description>This register is used to map TG1_WDT_LEVEL_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG1_LACT_LEVEL_INT_MAP</name>
          <description>TG1_LACT_LEVEL_INT interrupt configuration register</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG1_LACT_LEVEL_INT_MAP</name>
              <description>This register is used to map TG1_LACT_LEVEL_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_GPIO_INTERRUPT_PRO_MAP</name>
          <description>GPIO_INTERRUPT_PRO interrupt configuration register</description>
          <addressOffset>0x5c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_GPIO_INTERRUPT_PRO_MAP</name>
              <description>This register is used to map GPIO_INTERRUPT_PRO interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_GPIO_INTERRUPT_PRO_NMI_MAP</name>
          <description>GPIO_INTERRUPT_PRO_NMI interrupt configuration register</description>
          <addressOffset>0x60</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_GPIO_INTERRUPT_PRO_NMI_MAP</name>
              <description>This register is used to map GPIO_INTERRUPT_PRO_NMI interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_GPIO_INTERRUPT_APP_MAP</name>
          <description>GPIO_INTERRUPT_APP interrupt configuration register</description>
          <addressOffset>0x64</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_GPIO_INTERRUPT_APP_MAP</name>
              <description>This register is used to map GPIO_INTERRUPT_APP interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_GPIO_INTERRUPT_APP_NMI_MAP</name>
          <description>GPIO_INTERRUPT_APP_NMI interrupt configuration register</description>
          <addressOffset>0x68</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_GPIO_INTERRUPT_APP_NMI_MAP</name>
              <description>This register is used to map GPIO_INTERRUPT_APP_NMI interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DEDICATED_GPIO_IN_INTR_MAP</name>
          <description>DEDICATED_GPIO_IN_INTR interrupt configuration register</description>
          <addressOffset>0x6c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_DEDICATED_GPIO_IN_INTR_MAP</name>
              <description>This register is used to map DEDICATED_GPIO_IN_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_CPU_INTR_FROM_CPU_0_MAP</name>
          <description>CPU_INTR_FROM_CPU_0 interrupt configuration register</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_CPU_INTR_FROM_CPU_0_MAP</name>
              <description>This register is used to map CPU_INTR_FROM_CPU_0 interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_CPU_INTR_FROM_CPU_1_MAP</name>
          <description>CPU_INTR_FROM_CPU_1 interrupt configuration register</description>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_CPU_INTR_FROM_CPU_1_MAP</name>
              <description>This register is used to map CPU_INTR_FROM_CPU_1 interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_CPU_INTR_FROM_CPU_2_MAP</name>
          <description>CPU_INTR_FROM_CPU_2 interrupt configuration register</description>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_CPU_INTR_FROM_CPU_2_MAP</name>
              <description>This register is used to map CPU_INTR_FROM_CPU_2 interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_CPU_INTR_FROM_CPU_3_MAP</name>
          <description>CPU_INTR_FROM_CPU_3 interrupt configuration register</description>
          <addressOffset>0x7c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_CPU_INTR_FROM_CPU_3_MAP</name>
              <description>This register is used to map CPU_INTR_FROM_CPU_3 interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SPI_INTR_1_MAP</name>
          <description>SPI_INTR_1 interrupt configuration register</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SPI_INTR_1_MAP</name>
              <description>This register is used to map SPI_INTR_1 interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SPI_INTR_2_MAP</name>
          <description>SPI_INTR_2 interrupt configuration register</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SPI_INTR_2_MAP</name>
              <description>This register is used to map SPI_INTR_2 interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SPI_INTR_3_MAP</name>
          <description>SPI_INTR_3 interrupt configuration register</description>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SPI_INTR_3_MAP</name>
              <description>This register is used to map SPI_INTR_3 interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_I2S0_INT_MAP</name>
          <description>I2S0_INT interrupt configuration register</description>
          <addressOffset>0x8c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_I2S0_INT_MAP</name>
              <description>This register is used to map I2S0_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_I2S1_INT_MAP</name>
          <description>I2S1_INT interrupt configuration register</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_I2S1_INT_MAP</name>
              <description>This register is used to map I2S1_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_UART_INTR_MAP</name>
          <description>UART_INT interrupt configuration register</description>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_UART_INTR_MAP</name>
              <description>This register is used to map UART_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_UART1_INTR_MAP</name>
          <description>UART1_INT interrupt configuration register</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_UART1_INTR_MAP</name>
              <description>This register is used to map UART1_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_UART2_INTR_MAP</name>
          <description>UART2_INT interrupt configuration register</description>
          <addressOffset>0x9c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_UART2_INTR_MAP</name>
              <description>This register is used to map UART2_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SDIO_HOST_INTERRUPT_MAP</name>
          <description>SDIO_HOST_INTERRUPT configuration register</description>
          <addressOffset>0xa0</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SDIO_HOST_INTERRUPT_MAP</name>
              <description>This register is used to map SDIO_HOST_INTERRUPT signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_PWM0_INTR_MAP</name>
          <description>PWM0_INTR interrupt configuration register</description>
          <addressOffset>0xa4</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_PWM0_INTR_MAP</name>
              <description>This register is used to map PWM0_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_PWM1_INTR_MAP</name>
          <description>PWM1_INTR interrupt configuration register</description>
          <addressOffset>0xa8</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_PWM1_INTR_MAP</name>
              <description>This register is used to map PWM1_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_PWM2_INTR_MAP</name>
          <description>PWM2_INTR interrupt configuration register</description>
          <addressOffset>0xac</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_PWM2_INTR_MAP</name>
              <description>This register is used to map PWM2_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_PWM3_INTR_MAP</name>
          <description>PWM3_INTR interrupt configuration register</description>
          <addressOffset>0xb0</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_PWM3_INTR_MAP</name>
              <description>This register is used to map PWM3_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_LEDC_INT_MAP</name>
          <description>LEDC_INTR interrupt configuration register</description>
          <addressOffset>0xb4</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_LEDC_INT_MAP</name>
              <description>This register is used to map LEDC_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_EFUSE_INT_MAP</name>
          <description>EFUSE_INT interrupt configuration register</description>
          <addressOffset>0xb8</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_EFUSE_INT_MAP</name>
              <description>This register is used to map EFUSE_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_CAN_INT_MAP</name>
          <description>CAN_INT interrupt configuration register</description>
          <addressOffset>0xbc</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_CAN_INT_MAP</name>
              <description>This register is used to map CAN_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_USB_INTR_MAP</name>
          <description>USB_INT interrupt configuration register</description>
          <addressOffset>0xc0</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_USB_INTR_MAP</name>
              <description>This register is used to map USB_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_RTC_CORE_INTR_MAP</name>
          <description>RTC_CORE_INTR interrupt configuration register</description>
          <addressOffset>0xc4</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_RTC_CORE_INTR_MAP</name>
              <description>This register is used to map RTC_CORE_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_RMT_INTR_MAP</name>
          <description>RMT_INTR interrupt configuration register</description>
          <addressOffset>0xc8</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_RMT_INTR_MAP</name>
              <description>This register is used to map RMT_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_PCNT_INTR_MAP</name>
          <description>PCNT_INTR interrupt configuration register</description>
          <addressOffset>0xcc</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_PCNT_INTR_MAP</name>
              <description>This register is used to map PCNT_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_I2C_EXT0_INTR_MAP</name>
          <description>I2C_EXT0_INTR interrupt configuration register</description>
          <addressOffset>0xd0</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_I2C_EXT0_INTR_MAP</name>
              <description>This register is used to map I2C_EXT0_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_I2C_EXT1_INTR_MAP</name>
          <description>I2C_EXT1_INTR interrupt configuration register</description>
          <addressOffset>0xd4</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_I2C_EXT1_INTR_MAP</name>
              <description>This register is used to map I2C_EXT1_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_RSA_INTR_MAP</name>
          <description>RSA_INTR interrupt configuration register</description>
          <addressOffset>0xd8</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_RSA_INTR_MAP</name>
              <description>This register is used to map RSA_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SHA_INTR_MAP</name>
          <description>SHA_INTR interrupt configuration register</description>
          <addressOffset>0xdc</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SHA_INTR_MAP</name>
              <description>This register is used to map SHA_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_AES_INTR_MAP</name>
          <description>AES_INTR interrupt configuration register</description>
          <addressOffset>0xe0</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_AES_INTR_MAP</name>
              <description>This register is used to map AES_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SPI2_DMA_INT_MAP</name>
          <description>SPI2_DMA_INT interrupt configuration register</description>
          <addressOffset>0xe4</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SPI2_DMA_INT_MAP</name>
              <description>This register is used to map AES_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SPI3_DMA_INT_MAP</name>
          <description>SPI3_DMA_INT interrupt configuration register</description>
          <addressOffset>0xe8</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SPI3_DMA_INT_MAP</name>
              <description>This register is used to map SPI3_DMA_INT dma interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_WDG_INT_MAP</name>
          <description>WDG_INT interrupt configuration register</description>
          <addressOffset>0xec</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_WDG_INT_MAP</name>
              <description>This register is used to map WDG_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TIMER_INT1_MAP</name>
          <description>TIMER_INT1 interrupt configuration register</description>
          <addressOffset>0xf0</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TIMER_INT1_MAP</name>
              <description>This register is used to map TIMER_INT1 interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TIMER_INT2_MAP</name>
          <description>TIMER_INT2 interrupt configuration register</description>
          <addressOffset>0xf4</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TIMER_INT2_MAP</name>
              <description>This register is used to map TIMER_INT2 interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG_T0_EDGE_INT_MAP</name>
          <description>TG_T0_EDGE_INT interrupt configuration register</description>
          <addressOffset>0xf8</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG_T0_EDGE_INT_MAP</name>
              <description>This register is used to map TG_T0_EDGE_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG_T1_EDGE_INT_MAP</name>
          <description>TG_T1_EDGE_INT interrupt configuration register</description>
          <addressOffset>0xfc</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG_T1_EDGE_INT_MAP</name>
              <description>This register is used to map TG_T1_EDGE_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG_WDT_EDGE_INT_MAP</name>
          <description>TG_WDT_EDGE_INT interrupt configuration register</description>
          <addressOffset>0x100</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG_WDT_EDGE_INT_MAP</name>
              <description>This register is used to map TG_WDT_EDGE_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG_LACT_EDGE_INT_MAP</name>
          <description>TG_LACT_EDGE_INT interrupt configuration register</description>
          <addressOffset>0x104</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG_LACT_EDGE_INT_MAP</name>
              <description>This register is used to map TG_LACT_EDGE_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG1_T0_EDGE_INT_MAP</name>
          <description>TG1_T0_EDGE_INT interrupt configuration register</description>
          <addressOffset>0x108</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG1_T0_EDGE_INT_MAP</name>
              <description>This register is used to map TG1_T0_EDGE_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG1_T1_EDGE_INT_MAP</name>
          <description>TG1_T1_EDGE_INT interrupt configuration register</description>
          <addressOffset>0x10c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG1_T1_EDGE_INT_MAP</name>
              <description>This register is used to map TG1_T1_EDGE_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG1_WDT_EDGE_INT_MAP</name>
          <description>TG1_WDT_EDGE_INT interrupt configuration register</description>
          <addressOffset>0x110</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG1_WDT_EDGE_INT_MAP</name>
              <description>This register is used to map TG1_WDT_EDGE_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_TG1_LACT_EDGE_INT_MAP</name>
          <description>TG1_LACT_EDGE_INT interrupt configuration register</description>
          <addressOffset>0x114</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_TG1_LACT_EDGE_INT_MAP</name>
              <description>This register is used to map TG1_LACT_EDGE_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_CACHE_IA_INT_MAP</name>
          <description>CACHE_IA_INT interrupt configuration register</description>
          <addressOffset>0x118</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_CACHE_IA_INT_MAP</name>
              <description>This register is used to map CACHE_IA_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SYSTIMER_TARGET0_INT_MAP</name>
          <description>SYSTIMER_TARGET0_INT interrupt configuration register</description>
          <addressOffset>0x11c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SYSTIMER_TARGET0_INT_MAP</name>
              <description>This register is used to map SYSTIMER_TARGET0_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SYSTIMER_TARGET1_INT_MAP</name>
          <description>SYSTIMER_TARGET1_INT interrupt configuration register</description>
          <addressOffset>0x120</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SYSTIMER_TARGET1_INT_MAP</name>
              <description>This register is used to map SYSTIMER_TARGET1_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SYSTIMER_TARGET2_INT_MAP</name>
          <description>SYSTIMER_TARGET2_INT interrupt configuration register</description>
          <addressOffset>0x124</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SYSTIMER_TARGET2_INT_MAP</name>
              <description>This register is used to map SYSTIMER_TARGET2_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ASSIST_DEBUG_INTR_MAP</name>
          <description>ASSIST_DEBUG_INTR interrupt configuration register</description>
          <addressOffset>0x128</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_ASSIST_DEBUG_INTR_MAP</name>
              <description>This register is used to map ASSIST_DEBUG_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_PMS_PRO_IRAM0_ILG_INTR_MAP</name>
          <description>PMS_PRO_IRAM0_ILG interrupt configuration register</description>
          <addressOffset>0x12c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_PMS_PRO_IRAM0_ILG_INTR_MAP</name>
              <description>This register is used to map PMS_PRO_IRAM0_ILG interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_PMS_PRO_DRAM0_ILG_INTR_MAP</name>
          <description>PMS_PRO_DRAM0_ILG interrupt configuration register</description>
          <addressOffset>0x130</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_PMS_PRO_DRAM0_ILG_INTR_MAP</name>
              <description>This register is used to map PMS_PRO_DRAM0_ILG interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_PMS_PRO_DPORT_ILG_INTR_MAP</name>
          <description>PMS_PRO_DPORT_ILG interrupt configuration register</description>
          <addressOffset>0x134</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_PMS_PRO_DPORT_ILG_INTR_MAP</name>
              <description>This register is used to map PMS_PRO_DPORT_ILG interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_PMS_PRO_AHB_ILG_INTR_MAP</name>
          <description>PMS_PRO_AHB_ILG interrupt configuration register</description>
          <addressOffset>0x138</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_PMS_PRO_AHB_ILG_INTR_MAP</name>
              <description>This register is used to map PMS_PRO_AHB_ILG interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_PMS_PRO_CACHE_ILG_INTR_MAP</name>
          <description>PMS_PRO_CACHE_ILG interrupt configuration register</description>
          <addressOffset>0x13c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_PMS_PRO_CACHE_ILG_INTR_MAP</name>
              <description>This register is used to map PMS_PRO_CACHE_ILG interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_PMS_DMA_APB_I_ILG_INTR_MAP</name>
          <description>PMS_DMA_APB_I_ILG  interrupt configuration register</description>
          <addressOffset>0x140</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_PMS_DMA_APB_I_ILG_INTR_MAP</name>
              <description>This register is used to map PMS_DMA_APB_I_ILG interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_PMS_DMA_RX_I_ILG_INTR_MAP</name>
          <description>PMS_DMA_RX_I_ILG interrupt configuration register</description>
          <addressOffset>0x144</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_PMS_DMA_RX_I_ILG_INTR_MAP</name>
              <description>This register is used to map PMS_DMA_RX_I_ILG interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_PMS_DMA_TX_I_ILG_INTR_MAP</name>
          <description>PMS_DMA_TX_I_ILG interrupt configuration register</description>
          <addressOffset>0x148</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_PMS_DMA_TX_I_ILG_INTR_MAP</name>
              <description>This register is used to map PMS_DMA_TX_I_ILG interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SPI_MEM_REJECT_INTR_MAP</name>
          <description>SPI_MEM_REJECT_INTR interrupt configuration register</description>
          <addressOffset>0x14c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SPI_MEM_REJECT_INTR_MAP</name>
              <description>This register is used to map SPI_MEM_REJECT_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DMA_COPY_INTR_MAP</name>
          <description>DMA_COPY_INTR interrupt configuration register</description>
          <addressOffset>0x150</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_DMA_COPY_INTR_MAP</name>
              <description>This register is used to map DMA_COPY_INTR interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SPI4_DMA_INT_MAP</name>
          <description>SPI4_DMA_INT interrupt configuration register</description>
          <addressOffset>0x154</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SPI4_DMA_INT_MAP</name>
              <description>This register is used to map SPI4_DMA_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_SPI_INTR_4_MAP</name>
          <description>SPI_INTR_4 interrupt configuration register</description>
          <addressOffset>0x158</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_SPI_INTR_4_MAP</name>
              <description>This register is used to map SPI_INTR_4 interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_PRELOAD_INT_MAP</name>
          <description>DCACHE_PRELOAD_INT interrupt configuration register</description>
          <addressOffset>0x15c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_DCACHE_PRELOAD_INT_MAP</name>
              <description>This register is used to map DCACHE_PRELOAD_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_PRELOAD_INT_MAP</name>
          <description>ICACHE_PRELOAD_INT interrupt configuration register</description>
          <addressOffset>0x160</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_ICACHE_PRELOAD_INT_MAP</name>
              <description>This register is used to map ICACHE_PRELOAD_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_APB_ADC_INT_MAP</name>
          <description>APB_ADC_INT interrupt configuration register</description>
          <addressOffset>0x164</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_APB_ADC_INT_MAP</name>
              <description>This register is used to map APB_ADC_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_CRYPTO_DMA_INT_MAP</name>
          <description>CRYPTO_DMA_INT interrupt configuration register</description>
          <addressOffset>0x168</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_CRYPTO_DMA_INT_MAP</name>
              <description>This register is used to map CRYPTO_DMA_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_CPU_PERI_ERROR_INT_MAP</name>
          <description>CPU_PERI_ERROR_INT interrupt configuration register</description>
          <addressOffset>0x16c</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_CPU_PERI_ERROR_INT_MAP</name>
              <description>This register is used to map CPU_PERI_ERROR_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_APB_PERI_ERROR_INT_MAP</name>
          <description>APB_PERI_ERROR_INT interrupt configuration register</description>
          <addressOffset>0x170</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_APB_PERI_ERROR_INT_MAP</name>
              <description>This register is used to map APB_PERI_ERROR_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_DCACHE_SYNC_INT_MAP</name>
          <description>DCACHE_SYNC_INT interrupt configuration register</description>
          <addressOffset>0x174</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_DCACHE_SYNC_INT_MAP</name>
              <description>This register is used to map DCACHE_SYNC_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_ICACHE_SYNC_INT_MAP</name>
          <description>ICACHE_SYNC_INT interrupt configuration register</description>
          <addressOffset>0x178</addressOffset>
          <size>32</size>
          <resetValue>0x10</resetValue>
          <fields>
            <field>
              <name>PRO_ICACHE_SYNC_INT_MAP</name>
              <description>This register is used to map ICACHE_SYNC_INT interrupt signal to one of the CPU interrupts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_INTR_STATUS_REG_0</name>
          <description>Interrupt status register 0</description>
          <addressOffset>0x17c</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_INTR_STATUS_0</name>
              <description>This register stores the status of the first 32 input interrupt sources.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_INTR_STATUS_REG_1</name>
          <description>Interrupt status register 1</description>
          <addressOffset>0x180</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_INTR_STATUS_1</name>
              <description>This register stores the status of the second 32 input interrupt sources.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_INTR_STATUS_REG_2</name>
          <description>Interrupt status register 2</description>
          <addressOffset>0x184</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>PRO_INTR_STATUS_2</name>
              <description>This register stores the status of the last 31 input interrupt sources.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_GATE</name>
          <description>NMI interrupt signals mask register</description>
          <addressOffset>0x188</addressOffset>
          <size>32</size>
          <resetValue>0x1</resetValue>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>This bit is used to enable or disable the clock of interrupt matrix. 1: enable the clock. 0: disable the clock.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_NMI_MASK_HW</name>
              <description>This bit is used to disable all NMI interrupt signals to CPU.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DATE</name>
          <description>Version control register</description>
          <addressOffset>0xffc</addressOffset>
          <size>32</size>
          <resetValue>0x1904180</resetValue>
          <fields>
            <field>
              <name>INTERRUPT_REG_DATE</name>
              <description>This is the version register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>IO_MUX</name>
      <description>Input/Output Multiplexer</description>
      <groupName>IO_MUX</groupName>
      <baseAddress>0x3f409000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xb4</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>PIN_CTRL</name>
          <description>Clock output configuration register</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <resetValue>0x27ff</resetValue>
          <fields>
            <field>
              <name>PIN_CLK_OUT1</name>
              <description>Configure this register to 0, then output clock i2s0 to CLK_OUT1. The CLK_OUT1 can be found in IO_MUX Pad List.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PIN_CLK_OUT2</name>
              <description>Configure this register to 0, then output clock i2s0 to CLK_OUT2. The CLK_OUT2 can be found in IO_MUX Pad List.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PIN_CLK_OUT3</name>
              <description>Configure this register to 0, then output clock i2s0 to CLK_OUT3. The CLK_OUT3 can be found in IO_MUX Pad List.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWITCH_PRT_NUM</name>
              <description>IO pad power switch delay, delay unit is one APB clock.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PAD_POWER_CTRL</name>
              <description>Select power voltage for GPIO33 ~ GPIO37. 1: select VDD_SPI 1.8 V. 0: select VDD3P3_CPU 3.3 V.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO0</name>
          <description>Configuration register for pad GPIO0</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO1</name>
          <description>Configuration register for pad GPIO1</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO2</name>
          <description>Configuration register for pad GPIO2</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO3</name>
          <description>Configuration register for pad GPIO3</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO4</name>
          <description>Configuration register for pad GPIO4</description>
          <addressOffset>0x14</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO5</name>
          <description>Configuration register for pad GPIO5</description>
          <addressOffset>0x18</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO6</name>
          <description>Configuration register for pad GPIO6</description>
          <addressOffset>0x1c</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO7</name>
          <description>Configuration register for pad GPIO7</description>
          <addressOffset>0x20</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO8</name>
          <description>Configuration register for pad GPIO8</description>
          <addressOffset>0x24</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO9</name>
          <description>Configuration register for pad GPIO9</description>
          <addressOffset>0x28</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO10</name>
          <description>Configuration register for pad GPIO10</description>
          <addressOffset>0x2c</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO11</name>
          <description>Configuration register for pad GPIO11</description>
          <addressOffset>0x30</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO12</name>
          <description>Configuration register for pad GPIO12</description>
          <addressOffset>0x34</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO13</name>
          <description>Configuration register for pad GPIO13</description>
          <addressOffset>0x38</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO14</name>
          <description>Configuration register for pad GPIO14</description>
          <addressOffset>0x3c</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_32K_P</name>
          <description>Configuration register for pad XTAL_32K_P</description>
          <addressOffset>0x40</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_32K_N</name>
          <description>Configuration register for pad XTAL_32K_N</description>
          <addressOffset>0x44</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DAC_1</name>
          <description>Configuration register for pad DAC_1</description>
          <addressOffset>0x48</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DAC_2</name>
          <description>Configuration register for pad DAC_2</description>
          <addressOffset>0x4c</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO19</name>
          <description>Configuration register for pad GPIO19</description>
          <addressOffset>0x50</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO20</name>
          <description>Configuration register for pad GPIO20</description>
          <addressOffset>0x54</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO21</name>
          <description>Configuration register for pad GPIO21</description>
          <addressOffset>0x58</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPICS1</name>
          <description>Configuration register for pad SPICS1</description>
          <addressOffset>0x6c</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPIHD</name>
          <description>Configuration register for pad SPIHD</description>
          <addressOffset>0x70</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPIWP</name>
          <description>Configuration register for pad SPIWP</description>
          <addressOffset>0x74</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPICS0</name>
          <description>Configuration register for pad SPICS0</description>
          <addressOffset>0x78</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPICLK</name>
          <description>Configuration register for pad SPICLK</description>
          <addressOffset>0x7c</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPIQ</name>
          <description>Configuration register for pad SPIQ</description>
          <addressOffset>0x80</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPID</name>
          <description>Configuration register for pad SPID</description>
          <addressOffset>0x84</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_33</name>
          <description>Configuration register for pad GPIO33</description>
          <addressOffset>0x88</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_34</name>
          <description>Configuration register for pad GPIO34</description>
          <addressOffset>0x8c</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_35</name>
          <description>Configuration register for pad GPIO35</description>
          <addressOffset>0x90</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_36</name>
          <description>Configuration register for pad GPIO36</description>
          <addressOffset>0x94</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_37</name>
          <description>Configuration register for pad GPIO37</description>
          <addressOffset>0x98</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_38</name>
          <description>Configuration register for pad GPIO38</description>
          <addressOffset>0x9c</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MTCK</name>
          <description>Configuration register for pad MTCK</description>
          <addressOffset>0xa0</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MTDO</name>
          <description>Configuration register for pad MTDO</description>
          <addressOffset>0xa4</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MTDI</name>
          <description>Configuration register for pad MTDI</description>
          <addressOffset>0xa8</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MTMS</name>
          <description>Configuration register for pad MTMS</description>
          <addressOffset>0xac</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>U0TXD</name>
          <description>Configuration register for pad U0TXD</description>
          <addressOffset>0xb0</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>U0RXD</name>
          <description>Configuration register for pad U0RXD</description>
          <addressOffset>0xb4</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_45</name>
          <description>Configuration register for pad GPIO45</description>
          <addressOffset>0xb8</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_46</name>
          <description>Configuration register for pad GPIO46</description>
          <addressOffset>0xbc</addressOffset>
          <size>32</size>
          <resetValue>0xb00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: Output enabled. 0: Output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in sleep mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: Internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: Internal pull-up enabled. 0: Internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: Input enabled. 0: Input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1. 1: Select Function 2, etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled. 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version control register</description>
          <addressOffset>0xfc</addressOffset>
          <size>32</size>
          <resetValue>0x1907160</resetValue>
          <fields>
            <field>
              <name>VERSION</name>
              <description>Version control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>LEDC</name>
      <description>LED PWM (Pulse Width Modulation) Controller</description>
      <groupName>LEDC</groupName>
      <baseAddress>0x3f419000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xd8</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>LEDC</name>
        <value>45</value>
      </interrupt>
      <interrupt>
        <name>TIMER1</name>
        <value>60</value>
      </interrupt>
      <interrupt>
        <name>TIMER2</name>
        <value>61</value>
      </interrupt>
      <registers>
        <register>
          <dim>8</dim>
          <dimIncrement>0x14</dimIncrement>
          <name>CH%s_CONF0</name>
          <description>Configuration register 0 for channel %s</description>
          <addressOffset>0x0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>TIMER_SEL_CH0</name>
              <description>This field is used to select one of timers for channel %s.

0: select timer0

1: select timer1

2: select timer2

3: select timer3</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIG_OUT_EN_CH0</name>
              <description>Set this bit to enable signal output on channel %s.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IDLE_LV_CH0</name>
              <description>This bit is used to control the output value when channel %s is inactive.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PARA_UP_CH0</name>
              <description>This bit is used to update register LEDC_CH%s_HPOINT and LEDC_CH%s_DUTY for channel %s.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_NUM_CH0</name>
              <description>This register is used to configure the maximum times of overflow minus 1.

The LEDC_OVF_CNT_CH%s_INT interrupt will be triggered when channel %s overflows for (LEDC_OVF_NUM_CH%s + 1) times.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_EN_CH0</name>
              <description>This bit is used to enable the ovf_cnt of channel %s.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_RESET_CH0</name>
              <description>Set this bit to reset the ovf_cnt of channel %s.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_RESET_ST_CH0</name>
              <description>This is the status bit of LEDC_OVF_CNT_RESET_CH%s.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x14</dimIncrement>
          <name>CH%s_HPOINT</name>
          <description>High point register for channel %s</description>
          <addressOffset>0x4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>HPOINT_CH0</name>
              <description>The output value changes to high when the selected timers has reached the value specified by this register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x14</dimIncrement>
          <name>CH%s_DUTY</name>
          <description>Initial duty cycle for channel %s</description>
          <addressOffset>0x8</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DUTY_CH0</name>
              <description>This register is used to change the output duty by controlling the Lpoint.

The output value turns to low when the selected timers has reached the Lpoint.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x14</dimIncrement>
          <name>CH%s_CONF1</name>
          <description>Configuration register 1 for channel %s</description>
          <addressOffset>0xc</addressOffset>
          <size>32</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>DUTY_SCALE_CH0</name>
              <description>This register is used to configure the changing step scale of duty on channel %s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CYCLE_CH0</name>
              <description>The duty will change every LEDC_DUTY_CYCLE_CH%s on channel %s.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_NUM_CH0</name>
              <description>This register is used to control the number of times the duty cycle will be changed.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_INC_CH0</name>
              <description>This register is used to increase or decrease the duty of output signal on channel %s. 1: Increase;0: Decrease.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_START_CH0</name>
              <description>Other configured fields in LEDC_CH%s_CONF1_REG will start to take effect when this bit is set to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x14</dimIncrement>
          <name>CH%s_DUTY_R</name>
          <description>Current duty cycle for channel %s</description>
          <addressOffset>0x10</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>DUTY_R_CH0</name>
              <description>This register stores the current duty of output signal on channel %s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x8</dimIncrement>
          <name>TIMER%s_CONF</name>
          <description>Timer %s configuration</description>
          <addressOffset>0xa0</addressOffset>
          <size>32</size>
          <resetValue>0x800000</resetValue>
          <fields>
            <field>
              <name>TIMER0_DUTY_RES</name>
              <description>This register is used to control the range of the counter in timer %s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_DIV_TIMER0</name>
              <description>This register is used to configure the divisor for the divider in timer %s.

The least significant eight bits represent the fractional part.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER0_PAUSE</name>
              <description>This bit is used to suspend the counter in timer %s.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER0_RST</name>
              <description>This bit is used to reset timer %s. The counter will show 0 after reset.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TICK_SEL_TIMER0</name>
              <description>This bit is used to select clock for timer %s. When this bit is set to 1 LEDC_APB_CLK_SEL[1:0] should be 1, otherwise the timer clock may be not accurate.

1'h0: SLOW_CLK 1'h1: REF_TICK</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER0_PARA_UP</name>
              <description>Set this bit to update LEDC_CLK_DIV_TIMER%s and LEDC_TIMER%s_DUTY_RES.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x8</dimIncrement>
          <name>TIMER%s_VALUE</name>
          <description>Timer %s current counter value</description>
          <addressOffset>0xa4</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>TIMER0_CNT</name>
              <description>This register stores the current counter value of timer %s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>Raw interrupt status</description>
          <addressOffset>0xc0</addressOffset>
          <size>32</size>
          <fields>
            <field>
              <name>TIMER0_OVF_INT_RAW</name>
              <description>Triggered when the timer0 has reached its maximum counter value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER1_OVF_INT_RAW</name>
              <description>Triggered when the timer1 has reached its maximum counter value.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER2_OVF_INT_RAW</name>
              <description>Triggered when the timer2 has reached its maximum counter value.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER3_OVF_INT_RAW</name>
              <description>Triggered when the timer3 has reached its maximum counter value.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH0_INT_RAW</name>
              <description>Interrupt raw bit for channel 0. Triggered when the gradual change of duty has finished.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH1_INT_RAW</name>
              <description>Interrupt raw bit for channel 1. Triggered when the gradual change of duty has finished.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH2_INT_RAW</name>
              <descrip